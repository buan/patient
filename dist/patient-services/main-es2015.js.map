{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/material/material.module.ts","./src/app/patient-services.service.ts","./src/app/patient/patient-add-doctor/patient-add-doctor.component.ts","./src/app/patient/patient-add-doctor/patient-add-doctor.component.html","./src/app/patient/patient-appointment-add/patient-appointment-add.component.ts","./src/app/patient/patient-appointment-add/patient-appointment-add.component.html","./src/app/patient/patient-registration/patient-registration.component.ts","./src/app/patient/patient-registration/patient-registration.component.html","./src/app/patient/patient-search/patient-search.component.ts","./src/app/patient/patient-search/patient-search.component.html","./src/app/patient/shared/numbers-only.directive.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PatientRegistrationComponent } from './patient/patient-registration/patient-registration.component';\nimport { PatientAppointmentAddComponent } from './patient/patient-appointment-add/patient-appointment-add.component';\nimport { PatientServicesService } from './patient-services.service';\nimport { PatientSearchComponent } from './patient/patient-search/patient-search.component';\nimport { PatientAddDoctorComponent } from './patient/patient-add-doctor/patient-add-doctor.component';\n\n\n\nconst routes: Routes = [\n  { path: 'create', component: PatientRegistrationComponent },\n  { path: 'addappointment', component: PatientAppointmentAddComponent },\n  { path: 'search', component: PatientSearchComponent },\n  { path: 'add-doctor', component: PatientAddDoctorComponent },\n  { path: '', redirectTo: '/create', pathMatch: 'full' }\n  ];\n  \n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'patient-services';\n}\n","<div class=\"container-fluid\">\n  <nav class=\"navbar navbar-expand-lg navbar-light bg-primary \">\n    <a class=\"text-white navbar-brand\" href=\"#\">\n      <img src=\"../assets/images/copy.jpg\" width=\"40px\" height=\"40px\" class=\"d-inline-block align-top\" alt=\"\">\n    </a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n  \n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul class=\"navbar-nav mr-auto\">\n        \n        <li class=\"nav-item\">\n          <a routerLinkActive=\"font-weight-bold\" routerLink=\"create\" class=\"nav-link text-white\" href=\"#\">Register Patient</a>\n        </li>\n\n        <li class=\"nav-item\">\n          <a routerLinkActive=\"font-weight-bold\" routerLink=\"addappointment\" class=\"nav-link text-white\" href=\"#\">Patient Services</a>\n        </li>\n\n        <li class=\"nav-item\">\n          <a routerLinkActive=\"font-weight-bold\" routerLink=\"search\" class=\"nav-link text-white\" href=\"#\">Search Patient</a>\n        </li>\n\n        <li class=\"nav-item\">\n          <a routerLinkActive=\"font-weight-bold\" routerLink=\"add-doctor\" class=\"nav-link text-white\" href=\"#\">Add Doctor</a>\n        </li>\n\n      </ul>\n   \n    </div>\n  </nav>\n  <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from './material/material.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { DatePipe } from '@angular/common'\nimport { PatientRegistrationComponent } from './patient/patient-registration/patient-registration.component';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\nimport { PatientAppointmentAddComponent } from './patient/patient-appointment-add/patient-appointment-add.component';\nimport { PatientSearchComponent } from './patient/patient-search/patient-search.component';\nimport { PatientAddDoctorComponent } from './patient/patient-add-doctor/patient-add-doctor.component';\nimport { NumberDirective } from './patient/shared/numbers-only.directive';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PatientRegistrationComponent,\n    PatientAppointmentAddComponent,\n    PatientSearchComponent,\n    PatientAddDoctorComponent,\n    NumberDirective\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    FormsModule,\n    HttpClientModule,\n    NoopAnimationsModule\n  ],\n  providers: [DatePipe],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nconst Material = [\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatBadgeModule,\n  MatIconModule,\n  MatProgressSpinnerModule,\n  MatToolbarModule,\n  MatSidenavModule,\n  MatMenuModule,\n  MatListModule,\n  MatDividerModule,\n  MatGridListModule,\n  MatExpansionModule,\n  MatTabsModule,\n  MatCardModule,\n  MatStepperModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatSelectModule,\n  MatAutocompleteModule,\n  MatCheckboxModule,\n  MatRadioModule,\n  MatDatepickerModule,\n  MatNativeDateModule,\n  MatTooltipModule,\n  MatSnackBarModule,\n  MatDialogModule,\n  MatTableModule,\n  MatSortModule,\n  MatPaginatorModule\n];\n\n@NgModule({\n  imports: [Material],\n  exports: [Material]\n})\nexport class MaterialModule {}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { IEmployee } from './patient';\nimport { Observable } from 'rxjs/internal/Observable';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PatientServicesService {\n  private _urlforpatientreferred: string = \"http://localhost/drupal8dev/doctor-list\";\n  private _urlforbranch: string = \"http://localhost/drupal8dev/branch\";\n  private _urlfordepartments: string = \"http://localhost/drupal8dev/departments\";\n  private _urlforpurpose: string = \"http://localhost/drupal8dev/purpose\";\n  private _urlforme: string = \"http://localhost/drupal8dev/me\";\n  private _urlfortreatmenttype: string = \"http://localhost/drupal8dev/treatment\";\n  private _urlforcreatepatient: string = \"http://localhost/drupal8dev/entity/user?_format=hal_json\";\n  private _urlforcreatepatientappointment: string = \"http://localhost/drupal8dev/entity/node?_format=hal_json\";\n  private _urltovalidateuser: string = \"http://localhost/drupal8dev/findonepatient\";\n  private _urltoaddoctor: string = \"http://localhost/drupal8dev/entity/taxonomy_term?_format=hal_json\";\n  private _urltocheckforprescription: string = \"http://localhost/drupal8dev/checkprescription\";\n  private _urltocheckforuploadprescription: string = \"http://localhost/drupal8dev/entity/file?_format=hal_json\";\n  private headers: any = { 'Content-Type': 'application/hal+json', 'Authorization': 'Basic YWRtaW46YWRtaW4=', 'X-CSRF-Token': 'wGq8Jno6Sd8zCNa7I70vV7dWWiZtEtrbRrM9739zwhI' }\n\n  constructor(private http: HttpClient) { }\n\n  getPatientReferred(): Observable<IEmployee[]> {\n    return this.http.get<IEmployee[]>(this._urlforpatientreferred);\n  }\n  getBranch(): Observable<IEmployee[]> {\n    return this.http.get<IEmployee[]>(this._urlforbranch);\n  }\n\n  getDepartments(): Observable<IEmployee[]> {\n    return this.http.get<IEmployee[]>(this._urlfordepartments);\n  }\n\n  getpurpose(): Observable<IEmployee[]> {\n    return this.http.get<IEmployee[]>(this._urlforpurpose);\n  }\n  getMElist(): Observable<IEmployee[]> {\n    return this.http.get<IEmployee[]>(this._urlforme);\n  }\n\n  gettreatmentype(treatment): Observable<IEmployee[]> {\n    return this.http.get<IEmployee[]>(this._urlfortreatmenttype + \"/\" + treatment);\n  }\n  validateuser(uid): Observable<IEmployee[]> {\n    console.log(this._urltovalidateuser + \"/\" + uid)\n    return this.http.get<IEmployee[]>(this._urltovalidateuser + \"/\" + uid);\n  }\n\n  createpatient(value): Observable<IEmployee[]> {\n    console.log(value.PatientClinicSource);\n    let totalitemlist = '';\n\n    Object.keys(value.PatientClinicSource).forEach(item => {\n\n      console.log(item); // key\n      console.log(value.PatientClinicSource[item]); // value\n      if (value.PatientClinicSource[item] == true) {\n        totalitemlist = item + \"+\" + totalitemlist;\n      }\n\n\n    });\n    totalitemlist = totalitemlist.slice(0, -1);\n\n    //save as a patient\n    let data = {\n      \"_links\": {\n\n        \"type\": {\n\n          \"href\": \"http://localhost/drupal8dev/rest/type/user/user\"\n\n        }\n\n      },\n\n\n      \"name\": [{\n        \"value\": value.PatientRegistration\n      },\n      ],\n      \"roles\": [{\n        \"target_id\": \"patient\"\n      },\n      ],\n      \"status\": [{\n        \"value\": 1\n      },\n      ],\n      \"field_clinic_source\": [{ \"value\": totalitemlist }],\n      \"field_patient_name\": [{ \"value\": value.PatientName }],\n      \"field_patient_address\": [{ \"value\": value.PatientName }],\n      \"field_patient_age\": [{ \"value\": value.PatientAge }],\n      \"field_patient_contact_number\": [{ \"value\": value.PatientContactNumber }],\n      \"field_patient_sex\": [{ \"value\": value.PatientGender }],\n\n\n    };\n    return this.http.post<IEmployee[]>(this._urlforcreatepatient, data, { headers: this.headers });\n  }\n  createpatientappointment(value, patientreference): Observable<IEmployee[]> {\n    //save as a patient appointment\n    console.log(patientreference.uid[0].value);\n    console.log(value.TreatmentType);\n    let treatmenttype = '';\n    if (value.TreatmentType) {\n      value.TreatmentType.forEach((value) => {\n        treatmenttype = value + \"+\" + treatmenttype;\n\n      });\n    }\n\n    treatmenttype = treatmenttype.slice(0, -1);\n    let data = {\n      \"_links\": {\n\n        \"type\": {\n\n          \"href\": \"http://localhost/drupal8dev/rest/type/node/appointment\"\n\n        }\n\n      },\n\n\n      \"title\": [{\n        \"value\": value.PatientRegistration\n      },\n      ],\n      \"field_branch_name\": [{\n        \"value\": value.VisitingBranch\n      },\n      ],\n      \"field_type_of_treatment\": [{ \"value\": treatmenttype }],\n      \"field_doctor_referred\": [{ \"value\": value.PatientReferredBy }],\n      \"field_department\": [{ \"value\": value.SelectDepartment }],\n      \"field_patient\": [{ \"target_id\": patientreference.uid[0].value }],\n      \"field_purpose\": [{ \"value\": value.PurposeofVisit }],\n\n    };\n    return this.http.post<IEmployee[]>(this._urlforcreatepatientappointment, data, { headers: this.headers });\n  }\n  createanotherappointment(value, patientreference): Observable<IEmployee[]> {\n    //save as a patient appointment\n    console.log(patientreference[0].uid);\n    console.log(value);\n    let treatmenttype = '';\n    if (value.TreatmentType) {\n      value.TreatmentType.forEach(function (value) {\n        treatmenttype = value + \"+\" + treatmenttype;\n\n      });\n    }\n\n    treatmenttype = treatmenttype.slice(0, -1);\n    let data = {\n      \"_links\": {\n\n        \"type\": {\n\n          \"href\": \"http://localhost/drupal8dev/rest/type/node/appointment\"\n\n        }\n\n      },\n\n\n      \"title\": [{\n        \"value\": patientreference[0].name\n      },\n      ],\n      \"field_branch_name\": [{\n        \"value\": value.VisitingBranch\n      },\n      ],\n      \"field_type_of_treatment\": [{ \"value\": treatmenttype }],\n      \"field_doctor_referred\": [{ \"value\": value.PatientReferredBy }],\n      \"field_department\": [{ \"value\": value.SelectDepartment }],\n      \"field_patient\": [{ \"target_id\": patientreference[0].uid }],\n      \"field_purpose\": [{ \"value\": value.PurposeofVisit }],\n\n    };\n    return this.http.post<IEmployee[]>(this._urlforcreatepatientappointment, data, { headers: this.headers });\n  }\n\n  addoctor(value1, value2): Observable<IEmployee[]> {\n    let data = {\n\n      \"_links\": {\n\n        \"type\": {\n\n          \"href\": \"http://localhost/drupal8dev/rest/type/taxonomy_term/doctor_list\"\n\n        }\n\n      },\n      \"vid\": [\n        {\n          \"target_id\": \"doctor_list\"\n        }\n      ],\n\n\n      \"name\": [{\n        \"value\": value1.value\n      }],\n\n      \"field_marketing_executive\": [{\n        \"target_id\": value2.value\n      }\n\n\n      ]\n\n    };\n    return this.http.post<IEmployee[]>(this._urltoaddoctor, data, { headers: this.headers });\n  }\n  addME(value1): Observable<IEmployee[]> {\n    let data = {\n\n      \"_links\": {\n\n        \"type\": {\n\n          \"href\": \"http://localhost/drupal8dev/rest/type/taxonomy_term/marketing_executive\"\n\n        }\n\n      },\n      \"vid\": [\n        {\n          \"target_id\": \"marketing_executive\"\n        }\n      ],\n\n\n      \"name\": [{\n        \"value\": value1.value\n      }]\n\n    };\n    return this.http.post<IEmployee[]>(this._urltoaddoctor, data, { headers: this.headers });\n  }\n\n  updatepatientdetails(nid, contact, address): Observable<IEmployee[]> {\n    let data = {\n\n      \"_links\": {\n\n        \"type\": {\n\n          \"href\": \"http://localhost/drupal8dev/rest/type/user/user\"\n\n        }\n\n      },\n\n\n      \"field_patient_contact_number\": [{\n        \"value\": contact\n      }\n      ],\n\n      \"field_patient_address\": [{\n        \"value\": address\n      }\n      ]\n\n    };\n    return this.http.patch<IEmployee[]>(\"http://localhost/drupal8dev/user/\" + nid + \"?_format=hal_json\", data, { headers: this.headers });\n\n  }\n\n  checkprescription(regvalue): Observable<IEmployee[]> {\n    console.log(regvalue);\n    return this.http.get<IEmployee[]>(this._urltocheckforprescription + \"/\" + regvalue);\n  }\n\n  uploadprescription(name, base64, type): Observable<IEmployee[]> {\n    if (type.includes(\"image\")) {\n      type = \"image\"\n    }\n    else {\n      type = \"document\"\n    }\n    let data = {\n\n      \"_links\": {\n\n        \"type\": {\n\n          \"href\": \"http://localhost/drupal8dev/rest/type/file/document\"\n\n        }\n\n      },\n\n\n      \"uri\": [{ \"value\": \"public:\\/\\/\" + name }],\n\n      \"uid\": [{ \"target_id\": 1, \"target_type\": \"user\" }],\n      \"filename\": [{ \"value\": new Date().getTime() + name }],\n      \"filemime\": [{ \"value\": type }],\n      \"data\": [{\n        \"value\": base64\n      }]\n    };\n    console.log(type);\n    return this.http.post<IEmployee[]>(this._urltocheckforuploadprescription, data, { headers: this.headers });\n  }\n\n  attachprescription(value, regvalue, nid): Observable<IEmployee[]> {\n    console.log(value);\n    let data = {\n\n      \"_links\": {\n\n        \"type\": {\n\n          \"href\": \"http://localhost/drupal8dev/rest/type/node/appointment\"\n\n        }\n\n      },\n\n\n      \"title\": [{\n        \"value\": regvalue\n      }\n      ],\n\n      \"field_patient_prescription\": [{\n        \"target_id\": value.fid[0].value\n      }\n      ]\n\n    }\n    return this.http.patch<IEmployee[]>(\"http://localhost/drupal8dev/node/\" + nid + \"?_format=hal_json\", data, { headers: this.headers });\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { PatientServicesService } from 'src/app/patient-services.service';\n\n@Component({\n  selector: 'app-patient-add-doctor',\n  templateUrl: './patient-add-doctor.component.html',\n  styleUrls: ['./patient-add-doctor.component.css']\n})\nexport class PatientAddDoctorComponent implements OnInit {\n  image: string | ArrayBuffer;\n  purpose: import(\"d:/patient/patient-services/src/app/patient\").IEmployee[];\n  doctorsavedstatus: boolean = false;\n  dname1: string;\n  dname2: string;\n  me: string;\n  mes: import(\"d:/patient/patient-services/src/app/patient\").IEmployee[];\n  showmedicalexecutive: boolean = false;\n  showaddoctor: boolean = false;\n  mesavedstatus: boolean = false;\n  disablestatus: boolean = false;\n\n  constructor(private _patientService: PatientServicesService) { }\n\n  ngOnInit() {\n\n  }\n  doctoradd(value1, value2) {\n    this._patientService.addoctor(value1, value2)\n      .subscribe(data => {\n        this.purpose = data\n        if (this.purpose) {\n          this.doctorsavedstatus = true;\n          this.mesavedstatus = false\n          this.dname1 = ''\n        }\n      });\n\n  }\n  medicalexecutiveadd(value1) {\n    console.log(value1.value);\n    this._patientService.addME(value1)\n      .subscribe(data => {\n        this.purpose = data\n        if (this.purpose) {\n          this.doctorsavedstatus = false;\n          this.mesavedstatus = true;\n          this.dname2 = ''\n        }\n      });\n  }\n\n  addme() {\n    this.showaddoctor = false;\n    this.showmedicalexecutive = true;\n  }\n  adddoc() {\n    this._patientService.getMElist()\n      .subscribe(data => this.mes = data);\n\n    this.showaddoctor = true;\n    this.showmedicalexecutive = false;\n  }\n}\n","<div class=\"container mt-3\">\n    <div class=\"row\">\n        <div class=\"col text-center \">\n            <div class=\"btn-group \" role=\"group\">\n                <button type=\"button\" class=\"btn btn-secondary mr-2 btn-info\" (click)=\"addme()\">\n                    Add Medical Executive</button>\n                <button type=\"button\" class=\"btn btn-secondary mr-2 btn-info\" (click)=\"adddoc()\">Add\n                    Doctor</button>\n            </div>\n        </div>\n\n    </div>\n    <div class=\"card mt-3\" *ngIf=\"showaddoctor\">\n        <div class=\"card-header\">\n           Add Doctor\n        </div>\n        <div class=\"card-body\">\n            <div class=\"alert mt-2 alert-success\" role=\"alert\" *ngIf=\"doctorsavedstatus\">\n                <strong>Doctor Name</strong> Added\n                <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            \n            </div>\n            <div class=\"form-group\">\n                <div class=\"row\">\n                    <div class=\"col-md-5\">\n                        <label for=\"exampleInputEmail1\">Enter Doctor Name</label>\n                        <input type=\"text\" [(ngModel)]=\"dname1\" class=\"form-control\" #dnamevalue1 id=\"exampleInputEmail1\"\n                            [disabled]=\"disablestatus\" aria-describedby=\"emailHelp\">\n            \n                    </div>\n            \n                    <div class=\"col-md-5\">\n                        <label for=\"exampleFormControlSelect1\">Select Marketing Executive</label>\n                        <select class=\"form-control\" [(ngModel)]=\"me\" #mevalue id=\"exampleFormControlSelect1\">\n                            <option value=\"\" disabled selected=\"selected\">Select</option>\n                            <option *ngFor=\"let me of mes\" value={{me.tid}}>{{me.name}}</option>\n                        </select>\n                    </div>\n            \n                    <div class=\"col-md-2 mt-4\"> <button type=\"button\" [disabled]=\"dnamevalue1.value && mevalue.value?false:true\"\n                            class=\" mt-2 btn btn-primary\" (click)=\"doctoradd(dnamevalue1,mevalue)\">Add</button></div>\n                </div>\n            \n            </div>\n        </div>\n    </div>\n\n    <div class=\"card mt-3\" *ngIf=\"showmedicalexecutive\">\n        <div class=\"card-header\">\n           Add Medical Executive\n        </div>\n        <div class=\"card-body\">\n            <div class=\"alert mt-2 alert-success\" role=\"alert\" *ngIf=\"mesavedstatus\">\n                <strong>Medical Executive</strong> Added\n                <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            \n            </div>\n            <div class=\"form-group\">\n                <div class=\"row\">\n                    <div class=\"col-md-10\">\n                        <label for=\"exampleInputEmail1\">Enter Medical Executive</label>\n                        <input type=\"text\" [(ngModel)]=\"dname2\" class=\"form-control\" #dnamevalue2 id=\"exampleInputEmail1\"\n                            [disabled]=\"disablestatus\" aria-describedby=\"emailHelp\">\n            \n                    </div>\n            \n            \n            \n                    <div class=\"col-md-2 mt-4\"> <button type=\"button\" [disabled]=\"dnamevalue2.value?false:true\"\n                            class=\" mt-2 btn btn-primary\" (click)=\"medicalexecutiveadd(dnamevalue2)\">Add</button></div>\n                </div>\n            \n            </div>\n        </div>\n    </div>\n   \n</div>\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { PatientServicesService } from 'src/app/patient-services.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n\n\n@Component({\n  selector: 'app-patient-appointment-add',\n  templateUrl: './patient-appointment-add.component.html',\n  styleUrls: ['./patient-appointment-add.component.css']\n})\nexport class PatientAppointmentAddComponent implements OnInit {\n  checkuser: any;\n  userName: any;\n  usernotexist: string;\n  disablestatus: boolean = false;\n  enablestatus: boolean = false;\n  prescription_upload_status: boolean = false;\n  addappointment: FormGroup;\n  addcontact: FormGroup;\n  branches: import(\"d:/patient/patient-services/src/app/patient\").IEmployee[];\n  patientreferred: import(\"d:/patient/patient-services/src/app/patient\").IEmployee[];\n  departments: import(\"d:/patient/patient-services/src/app/patient\").IEmployee[];\n  purpose: import(\"d:/patient/patient-services/src/app/patient\").IEmployee[];\n  selectedpurpose: any;\n  showtreatmenttype: boolean;\n  showprescription: boolean;\n  prescriptionstatus: import(\"d:/patient/patient-services/src/app/patient\").IEmployee[];\n  patientForm: any;\n  selecteddepartments: any;\n  showpurpose: boolean;\n  showappointment: boolean = false;\n  showdetailsupdate: boolean = false;\n  treatment: import(\"d:/patient/patient-services/src/app/patient\").IEmployee[];\n  addprescription: FormGroup;upload\n  image: string | ArrayBuffer;\n  registrationvalue: string;\n  uploadtype: File;\n  getfid: import(\"d:/patient/patient-services/src/app/patient\").IEmployee[];\n  nodeid: any;\n\n\n  constructor(private _patientService: PatientServicesService, private fb: FormBuilder,private router: Router) { }\n  formErrors = {\n    'PatientAddress': '',\n    'PatientContactNumber': '',\n\n  };\n\n  // This object contains all the validation messages for this form\n  validationMessages = {\n    'PatientAddress': {\n      'required': 'Patient Address is required.',\n    },\n    'PatientContactNumber': {\n      'required': 'Patient Contact Number is required.',\n    },\n\n  };\n  ngOnInit() {\n    this.addappointment = this.fb.group({\n      // PatientAppointmentDate: [''],\n      VisitingBranch: ['', Validators.required],\n      PatientReferredBy: [''],\n      SelectDepartment: [''],\n      PurposeofVisit: [''],\n      TreatmentType: [''],\n    });\n\n\n    this.addcontact = this.fb.group({\n      PatientAddress: ['', Validators.required],\n      PatientContactNumber: ['', Validators.required],\n    });\n\n    this.addprescription = this.fb.group({\n\n    });\n\n    this._patientService.getBranch()\n      .subscribe(data => this.branches = data);\n\n    this._patientService.getPatientReferred()\n      .subscribe(data => this.patientreferred = data);\n\n    this._patientService.getDepartments()\n      .subscribe(data => this.departments = data);\n\n    this._patientService.getpurpose()\n      .subscribe(data => this.purpose = data);\n  }\n\n  updatecontact(): void {\n    console.log(this.addcontact.getRawValue().PatientAddress);\n    this._patientService.updatepatientdetails(this.checkuser[0].uid, this.addcontact.getRawValue().PatientContactNumber, this.addcontact.getRawValue().PatientAddress)\n      .subscribe(data => console.log(data));\n\n  }\n\n  updateappointment(): void {\n    console.log(this.addappointment.getRawValue());\n    this._patientService.createanotherappointment(this.addappointment.getRawValue(), this.checkuser)\n      .subscribe(data => console.log(data));\n  }\n\n  changedpurpose(value: any): void {\n    console.log(value);\n    this.selectedpurpose = value;\n    if (value == 'Treatment') {\n      this.showtreatmenttype = true;\n    }\n    else {\n      this.showtreatmenttype = false;\n      this.addappointment.patchValue({\n        TreatmentType: '',\n      });\n    }\n  }\n\n  onFileSelected($event) {\n    this.readThis($event.target);\n  }\n\n  readThis(inputValue: any): void {\n    var file: File = inputValue.files[0];\n    var myReader: FileReader = new FileReader();\n\n    myReader.onloadend = (e) => {\n      this.uploadtype=file;\n      this.image = (<string>myReader.result).split('base64,')[1];\n      // this.image=this.image.replace(new RegExp('.*' + Y), '')\n    }\n    myReader.readAsDataURL(file);\n  }\n\n  submitpres(value){\n    console.log(this.uploadtype.name);\n    this._patientService.uploadprescription(this.uploadtype.name,value,this.uploadtype.type)\n    .subscribe(data =>{ \n      if(data){\n        this._patientService.attachprescription(data,this.registrationvalue,this.nodeid).subscribe(data=>{\n          if(data){\n            this.prescription_upload_status=true;\n            setTimeout(()=>{  \n                    this.router.navigate(['/search']);\n               }, 3000);\n          }\n        \n        });\n\n      }    \n  \n    });\n   \n  }\n\n  logValidationErrors(group: FormGroup = this.addcontact): void {\n    // loop through each key in the FormGroup\n    Object.keys(group.controls)\n    .forEach((key: string) => {\n      // Get a reference to the control using the FormGroup.get() method\n      const abstractControl = group.get(key);\n      // If the control is an instance of FormGroup i.e a nested FormGroup\n      // then recursively call this same method (logKeyValuePairs) passing it\n      // the FormGroup so we can get to the form controls in it\n      if (abstractControl instanceof FormGroup) {\n        this.logValidationErrors(abstractControl);\n        // If the control is not a FormGroup then we know it's a FormControl\n\n\n      } else {\n        // console.log('Key = ' + key + ' && Value = ' + abstractControl.value);\n        // abstractControl.disable();\n        this.formErrors[key] = '';\n        if (abstractControl && !abstractControl.valid && (abstractControl.touched || abstractControl.dirty)) {\n          // Get all the validation messages of the form control\n          // that has failed the validation\n          const messages = this.validationMessages[key];\n          // Find which validation has failed. For example required,\n          // minlength or maxlength. Store that error message in the\n          // formErrors object. The UI will bind to this object to\n          // display the validation errors\n          for (const errorKey in abstractControl.errors) {\n            if (errorKey) {\n              this.formErrors[key] += messages[errorKey] + ' ';\n            }\n          }\n        }\n      }\n    });\n  }\n\n\n  changeddepartment(value: any): void {\n    this.selecteddepartments = value.value;\n    console.log(this.selecteddepartments);\n    if (value) {\n      this.showpurpose = true;\n      this._patientService.gettreatmentype(this.selecteddepartments)\n        .subscribe(data => this.treatment = data);\n    }\n  }\n\n  enableappointment() {\n    this.showappointment = true;\n    this.showdetailsupdate = false;\n    this.showprescription = false;\n  }\n\n  enableupdate() {\n    this.showappointment = false;\n    this.showdetailsupdate = true;\n    this.showprescription = false;\n  }\n  enableprescriptionupload() {\n    this._patientService.checkprescription(this.registrationvalue)\n      .subscribe(data =>{\n        this.prescriptionstatus = data[0].field_patient_prescription;\n        this.nodeid=data[0].nid;\n      });\n    this.showappointment = false;\n    this.showdetailsupdate = false;\n    this.showprescription = true;\n  }\n  patientValidate(regvalue) {\n    this.registrationvalue = regvalue;\n    this._patientService.validateuser(regvalue)\n      .subscribe(data => {\n        if(data){\n          this.checkuser = data;\n          console.log(this.checkuser);\n        }\n        \n        \n        if (Object.keys(this.checkuser).length == 1) {\n          this.disablestatus = true;\n          this.enablestatus = false;\n        }\n        else {\n          this.enablestatus = true;\n        }\n      });\n\n  }\n\n\n\n}\n","<div class=\"alert mt-2 alert-danger\" role=\"alert\" *ngIf=\"enablestatus\">\n    <strong>Invalid</strong> Registration ID\n\n</div>\n<div class=\"form-group\">\n    <div class=\"row\">\n        <div class=\"col-md-10\">\n            <label for=\"exampleInputEmail1\">Enter Registration ID</label>\n            <input type=\"text\"  class=\"form-control\" #regvalue id=\"exampleInputEmail1\"\n                [disabled]=\"disablestatus\" aria-describedby=\"emailHelp\">\n\n        </div>\n        <div class=\"col-md-2 mt-4\"> <button type=\"button\" [disabled]=\"regvalue.value?false:true\"\n                class=\" mt-2 btn btn-primary\" (click)=\"patientValidate(regvalue.value)\">Validate</button></div>\n    </div>\n\n</div>\n\n\n<div class=\"container\" *ngIf=\"disablestatus\">\n    <div class=\"row\">\n        <div class=\"col text-center\">\n            <div class=\"btn-group \" role=\"group\">\n                <button type=\"button\" class=\"btn btn-secondary mr-2 btn-info\" (click)=\"enableupdate()\">Update Phone\n                    Number/Address</button>\n                <button type=\"button\" class=\"btn btn-secondary mr-2 btn-info\" (click)=\"enableappointment()\">Add\n                    Sitting</button>\n                <button type=\"button\" class=\"btn btn-secondary btn-info\" (click)=\"enableprescriptionupload()\">Add\n                    Prescription</button>\n            </div>\n        </div>\n\n    </div>\n</div>\n\n<form [formGroup]=\"addcontact\" *ngIf=\"showdetailsupdate\" (ngSubmit)=\"updatecontact()\">\n    <div class=\"card mt-2\">\n        <div class=\"card-header\">\n            <h5 class=\"card-title\">Update Contact Details</h5>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-md\">\n                <div class=\"form-group mx-3\">\n                    <label for=\"PatientAddress\">Address</label>\n                    <textarea formControlName=\"PatientAddress\" class=\"form-control\" id=\"PatientAddress\" rows=\"3\"\n                        [ngClass]=\"{'border-danger': formErrors.PatientAddress}\"\n                        (blur)=\"logValidationErrors()\"></textarea>\n                    <span *ngIf=\"formErrors.PatientAddress\" [ngClass]=\"{'text-danger': formErrors.PatientAddress}\">\n\n                        {{formErrors.PatientAddress}}\n\n                    </span>\n                </div>\n\n            </div>\n\n            <div class=\"col-md\">\n                <div class=\"form-group mx-3\">\n                    <label for=\"PatientContactNumber\">Contact Number</label>\n                    <input type=\"text\" formControlName=\"PatientContactNumber\" numbersOnly class=\"form-control\"\n                        id=\"PatientContactNumber\" placeholder=\"Enter Patient Contact Number\"\n                        [ngClass]=\"{'border-danger': formErrors.PatientContactNumber}\" (blur)=\"logValidationErrors()\">\n                    <span *ngIf=\"formErrors.PatientContactNumber\"\n                        [ngClass]=\"{'text-danger': formErrors.PatientContactNumber}\">\n\n                        {{formErrors.PatientContactNumber}}\n\n                    </span>\n                </div>\n            </div>\n\n\n        </div>\n\n        <div class=\"col-md-10\">\n            <button type=\"submit\" [disabled]=\"addcontact.invalid\" class=\"btn btn-primary\">Submit</button>\n        </div>\n    </div>\n</form>\n\n<form [formGroup]=\"addappointment\" *ngIf=\"showappointment\" (ngSubmit)=\"updateappointment()\">\n    <div class=\"card mt-2\">\n        <div class=\"card-header\">\n            <h5 class=\"card-title\">Patient Appointment Details</h5>\n        </div>\n\n        <div class=\"row\">\n            <!-- <div class=\"col-md\">\n                <div class=\"form-group mx-3 mt-2\">\n                    <label>Patient Appointment Date</label>\n                    <br>\n                    <mat-form-field>\n                        <mat-label>Choose a date</mat-label>\n                        <input matInput [matDatepicker]=\"picker\" formControlName=\"PatientAppointmentDate\">\n                        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                        <mat-datepicker #picker></mat-datepicker>\n                    </mat-form-field>\n                </div>\n            </div> -->\n            <div class=\"col-md\">\n                <div class=\"form-group mx-3 mt-2\">\n                    <label for=\"VisitingBranch\">Visiting Branch</label>\n                    <select formControlName=\"VisitingBranch\" class=\"form-control\" id=\"VisitingBranch\">\n                        <option value=\"\" disabled>Select</option>\n                        <option *ngFor=\"let branch of branches\" value={{branch.name}}>{{branch.name}}</option>\n                    </select>\n                </div>\n\n            </div>\n\n            <div class=\"col-md\">\n                <div class=\"form-group mx-3 mt-2\">\n                    <label for=\"PatientReferredBy\">Patient Referred By</label>\n                    <select formControlName=\"PatientReferredBy\" class=\"form-control\" id=\"PatientReferredBy\">\n                        <option value=\"\" disabled>Select</option>\n                        <option *ngFor=\"let patientreferrer of patientreferred\" value={{patientreferrer.name}}>\n                            {{patientreferrer.name}}</option>\n                    </select>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-md-4\">\n                <div class=\"form-group mx-3\">\n                    <label for=\"SelectDepartment\">Select Department</label>\n                    <select formControlName=\"SelectDepartment\" #dvalue (change)=\"changeddepartment(dvalue)\"\n                        class=\"form-control\" id=\"SelectDepartment\">\n                        <option value=\"\" disabled>Select</option>\n                        <option *ngFor=\"let department of departments\" value={{department.name}}>\n                            {{department.name}}</option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"col-md-4\" *ngIf=\"showpurpose\">\n                <div class=\"form-group\">\n                    <label for=\"PurposeofVisit\">Purpose of Visit</label>\n                    <select formControlName=\"PurposeofVisit\" #pvalue (change)=\"changedpurpose(pvalue.value)\"\n                        class=\"form-control\" id=\"PurposeofVisit\">\n                        <option value=\"\" disabled>Select</option>\n                        <option *ngFor=\"let purposes of purpose\" value={{purposes.name}}>\n                            {{purposes.name}}</option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"col-md-4\" *ngIf=\"showtreatmenttype\">\n                <div class=\"form-group\">\n                    <label for=\"TreatmentType\">Treatment Type</label>\n                    <select multiple formControlName=\"TreatmentType\" class=\"form-control\" id=\"TreatmentType\">\n                        <option value=\"\" disabled>Select</option>\n                        <option *ngFor=\"let treatments of treatment\" value={{treatments.field_treatment_name}}>\n                            {{treatments.field_treatment_name}}</option>\n                    </select>\n\n                </div>\n            </div>\n        </div>\n        <div class=\"col-md-10\">\n            <button type=\"submit\" [disabled]=\"addappointment.invalid\" class=\"btn btn-primary\">Submit</button>\n        </div>\n\n    </div>\n</form>\n\n\n<div class=\"card mt-2\" *ngIf=\"showprescription\">\n    <h5 class=\"card-header\">Prescription Details</h5>\n    <div class=\"card-body\" *ngIf=\"prescriptionstatus;else notShow\">\n        <p>\n            Prescription already uploaded\n        </p>\n\n    </div>\n\n    <ng-template #notShow>\n        <div class=\"alert alert-success\" *ngIf=\"prescription_upload_status\">\n             Prescription uploaded successfuly\n          </div>\n        <input type=\"file\" name=\"\" id=\"\" (change)=\"onFileSelected($event)\" required\n            accept=\"application/pdf, image/jpeg\">\n        <button *ngIf=\"uploadtype\" (click)=\"submitpres(image)\" class=\"btn btn-primary mx-auto\">Submit</button>\n    </ng-template>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormArray } from '@angular/forms';\nimport { DatePipe } from '@angular/common';\nimport { PatientServicesService } from 'src/app/patient-services.service';\nimport { IEmployee } from 'src/app/patient';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-patient-registration',\n  templateUrl: './patient-registration.component.html',\n  styleUrls: ['./patient-registration.component.css']\n})\nexport class PatientRegistrationComponent implements OnInit {\n  currentDate: Date;\n  showpurpose: boolean = false;\n  showtreatmenttype: boolean = false;\n  showothersreason: boolean = false;\n  patientsavedstatus: boolean = false;\n  uploadtype: File;\n  image: string;\n\n  constructor(private fb: FormBuilder, public datepipe: DatePipe, private _patientService: PatientServicesService, private router: Router) { }\n\n  patientForm: FormGroup;\n  patientreferred: IEmployee[];\n  branches: IEmployee[];\n  departments: IEmployee[];\n  selecteddepartments: IEmployee[];\n  purpose: IEmployee[];\n  selectedpurpose: IEmployee[];\n  treatment: IEmployee[];\n  uid: IEmployee[];\n  createpatientresult: any;\n\n\n  formErrors = {\n    'PatientName': '',\n    'PatientAge': '',\n    'PatientAddress': '',\n    'PatientClinicSource': '',\n    'VisitingBranch': '',\n    'PatientReferredBy': '',\n    'SelectDepartment': '',\n    'PurposeofVisit': '',\n\n  };\n\n  // This object contains all the validation messages for this form\n  validationMessages = {\n    'PatientName': {\n      'required': 'Patient Name is required.',\n      'maxlength': 'Patient Name must be less than 20 characters.'\n    },\n    'PatientAge': {\n      'required': 'Patient Age is required.',\n    },\n    'PatientAddress': {\n      'required': 'Patient Address is required.',\n    },\n    'PatientClinicSource': {\n      'required': 'Patient Clinic Source is required.',\n    },\n    'VisitingBranch': {\n      'required': 'Visiting Branch is required.',\n    },\n    'PatientReferredBy': {\n      'required': 'Patient ReferredBy is required.',\n    },\n    'SelectDepartment': {\n      'required': 'Department is required.',\n    },\n    'PurposeofVisit': {\n      'required': 'Purpose of Visit is required.',\n    },\n  };\n\n\n\n\n  ngOnInit() {\n\n    this._patientService.getBranch()\n      .subscribe(data => this.branches = data);\n\n    this._patientService.getPatientReferred()\n      .subscribe(data => this.patientreferred = data);\n\n    this._patientService.getDepartments()\n      .subscribe(data => this.departments = data);\n\n    this._patientService.getpurpose()\n      .subscribe(data => this.purpose = data);\n\n    this.currentDate = new Date();\n    let latest_date = this.datepipe.transform(this.currentDate, 'ddMMyyyyhmmss');\n    latest_date = 'REG' + latest_date\n    this.patientForm = this.fb.group({\n      PatientRegistration: [{ value: latest_date, disabled: true }],\n      PatientName: ['', Validators.required],\n      PatientContactNumber: [''],\n      PatientAge: ['', Validators.required],\n      PatientGender: ['Male'],\n      PatientReferredPrescription: [''],\n      PatientAddress: ['', Validators.required],\n      PatientClinicSource: this.fb.group({\n        Doctor: [''],\n        Hospital: [''],\n        NursingHome: [''],\n        Polyclinic: [''],\n        MedicineShop: [''],\n        RelativeFriend: [''],\n        ClinicSignBoard: [''],\n        FlexBanner: [''],\n        LeafletFlyers: [''],\n        Newspaper: [''],\n        ElectronicMedia: [''],\n        Website: [''],\n        Facebook: [''],\n        SocialMedia: [''],\n        Others: [''],\n        othersreason: [''],\n      }),\n      VisitingBranch: ['', Validators.required],\n      PatientReferredBy: ['', Validators.required],\n      SelectDepartment: ['', Validators.required],\n      PurposeofVisit: ['', Validators.required],\n      TreatmentType: [''],\n    });\n\n  }\n\n\n\n\n\n  loadvalues(): void {\n    this.logValidationErrors(this.patientForm);\n    console.log(this.formErrors);\n  }\n\n\n\n  treatmentype(value: any): void {\n    console.log(value);\n  }\n\n  changedpurpose(value: any): void {\n    console.log(value);\n    this.selectedpurpose = value;\n    if (value == 'Treatment') {\n      this.showtreatmenttype = true;\n    }\n    else {\n      this.showtreatmenttype = false;\n      this.patientForm.patchValue({\n        TreatmentType: '',\n      });\n    }\n  }\n\n  changeddepartment(value: any): void {\n    this.selecteddepartments = value.value;\n    console.log(this.selecteddepartments);\n    if (value) {\n      this.showpurpose = true;\n      this._patientService.gettreatmentype(this.selecteddepartments)\n        .subscribe(data => this.treatment = data);\n    }\n\n  }\n\n  showothersreasonbox(): void {\n    this.showothersreason = !this.showothersreason;\n  }\n\n  logValidationErrors(group: FormGroup = this.patientForm): void {\n    // loop through each key in the FormGroup\n    Object.keys(group.controls).forEach((key: string) => {\n      // Get a reference to the control using the FormGroup.get() method\n      const abstractControl = group.get(key);\n      // If the control is an instance of FormGroup i.e a nested FormGroup\n      // then recursively call this same method (logKeyValuePairs) passing it\n      // the FormGroup so we can get to the form controls in it\n      if (abstractControl instanceof FormGroup) {\n        this.logValidationErrors(abstractControl);\n        // If the control is not a FormGroup then we know it's a FormControl\n\n\n      } else {\n        // console.log('Key = ' + key + ' && Value = ' + abstractControl.value);\n        // abstractControl.disable();\n        this.formErrors[key] = '';\n        if (abstractControl && !abstractControl.valid && (abstractControl.touched || abstractControl.dirty)) {\n          // Get all the validation messages of the form control\n          // that has failed the validation\n          const messages = this.validationMessages[key];\n          // Find which validation has failed. For example required,\n          // minlength or maxlength. Store that error message in the\n          // formErrors object. The UI will bind to this object to\n          // display the validation errors\n          for (const errorKey in abstractControl.errors) {\n            if (errorKey) {\n              this.formErrors[key] += messages[errorKey] + ' ';\n            }\n          }\n        }\n      }\n    });\n  }\n\n  onFileSelected($event) {\n    this.readThis($event.target);\n  }\n  readThis(inputValue: any): void {\n    var file: File = inputValue.files[0];\n    var myReader: FileReader = new FileReader();\n\n    myReader.onloadend = (e) => {\n      this.uploadtype = file;\n      this.image = (<string>myReader.result).split('base64,')[1];\n      console.log(this.image);\n      // this.image=this.image.replace(new RegExp('.*' + Y), '')\n    }\n    myReader.readAsDataURL(file);\n  }\n\n  onSubmit(): void {\n    console.log(this.patientForm.getRawValue().PatientReferredPrescription);\n\n    this._patientService.uploadprescription(this.uploadtype.name, this.image, this.uploadtype.type).subscribe(data => console.log(data) )\n    //     this._patientService.createpatient(this.patientForm.getRawValue())\n    //       .subscribe(data => {\n    //         this.createpatientresult = data;\n    //         console.log(this.createpatientresult);\n    //         setTimeout(()=>{  \n    //           this._patientService.createpatientappointment(this.patientForm.getRawValue(),this.createpatientresult)\n    //           .subscribe(data => console.log(this.createpatientresult));\n    //           this.patientsavedstatus=true;\n    //      }, 1000);\n    //      setTimeout(()=>{  \n    //       this.router.navigate(['/search']);\n    //  }, 2000);\n\n\n    //       });\n\n  }\n\n}\n","\n  \n  \n<div class=\"container-fluid\">\n\n    <form [formGroup]=\"patientForm\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"card mt-2\">\n\n            <div class=\"card-header\">\n                <h3 class=\"card-title\">Patient Details</h3>\n            </div>\n            <div class=\"alert alert-success mt-2 mb-1 mx-2 fade show\" role=\"alert\" *ngIf=\"patientsavedstatus\">\n                <strong> Patient Details saved</strong>\n                <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"form-group mx-3\">\n                <label for=\"regnum\">Registration Number</label>\n                <input type=\"text\" formControlName=\"PatientRegistration\" class=\"form-control\" id=\"regnum\"\n                    aria-describedby=\"regnum\">\n\n            </div>\n            <div class=\"form-group mx-3\">\n                <label for=\"patientname\"> Name</label>\n                <input type=\"text\" [ngClass]=\"{'border-danger': formErrors.PatientName}\" formControlName=\"PatientName\"\n                    class=\"form-control\" id=\"patientname\" placeholder=\"Enter Patient Name\"\n                    (blur)=\"logValidationErrors()\">\n                <span *ngIf=\"formErrors.PatientName\" [ngClass]=\"{'text-danger': formErrors.PatientName}\">\n\n                    {{formErrors.PatientName}}\n\n                </span>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"col-md\">\n                    <div class=\"form-group mx-3\">\n                        <label for=\"PatientContactNumber\">Contact Number</label>\n                        <input type=\"text\" formControlName=\"PatientContactNumber\" class=\"form-control\"\n                            id=\"PatientContactNumber\" placeholder=\"Enter Patient Contact Number\"\n                            (blur)=\"logValidationErrors()\">\n                      \n                    </div>\n                </div>\n\n                \n                <div class=\"col-md\">\n                    <div class=\"form-group mx-3\">\n                        <label for=\"PatientAge\">Age</label>\n                        <input type=\"text\" numbersOnly formControlName=\"PatientAge\" class=\"form-control\" id=\"PatientAge\"\n                            placeholder=\"Enter Patient Age\" [ngClass]=\"{'border-danger': formErrors.PatientAge}\"\n                            (blur)=\"logValidationErrors()\">\n                        <span *ngIf=\"formErrors.PatientAge\" [ngClass]=\"{'text-danger': formErrors.PatientAge}\">\n\n                            {{formErrors.PatientAge}}\n\n                        </span>\n                    </div>\n                </div>\n                <div class=\"col-md\">\n                    <div class=\"form-group mx-3 form-inline\">\n                        <legend class=\"col-form-label\">Sex</legend>\n                        <div class=\"form-check form-check-inline\">\n                            <input class=\"form-check-input\" formControlName=\"PatientGender\" type=\"radio\"\n                                name=\"PatientGender\" id=\"exampleRadios1\" value=\"Male\" checked>\n                            <label class=\"form-check-label\" for=\"exampleRadios1\">\n                                Male\n                            </label>\n                        </div>\n                        <div class=\"form-check form-check-inline\">\n                            <input class=\"form-check-input\" formControlName=\"PatientGender\" type=\"radio\"\n                                name=\"PatientGender\" id=\"exampleRadios2\" value=\"Female \">\n                            <label class=\"form-check-label\" for=\"exampleRadios2\">\n                                Female\n                            </label>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n\n\n\n            <div class=\"form-group mx-3\">\n                <div class=\"row\">\n                    <div class=\"col-md-8\">\n                        <label for=\"PatientAddress\">Address</label>\n                        <textarea formControlName=\"PatientAddress\" class=\"form-control\" id=\"PatientAddress\" rows=\"3\"\n                            [ngClass]=\"{'border-danger': formErrors.PatientAddress}\" (blur)=\"logValidationErrors()\"></textarea>\n                        <span *ngIf=\"formErrors.PatientAddress\" [ngClass]=\"{'text-danger': formErrors.PatientAddress}\">\n        \n                            {{formErrors.PatientAddress}}\n        \n                        </span>\n                    </div>\n                    <div class=\"col-md-4 mt-2\">\n                        <div class=\"form-group\">\n                            <label for=\"exampleFormControlFile1\">Patient Referred Prescription</label>\n                            <input type=\"file\"  formControlName=\"PatientReferredPrescription\" class=\"mt-2 form-control-file\"  (change)=\"onFileSelected($event)\" id=\"exampleFormControlFile1\">\n\n                            \n                          </div>\n                    </div>\n                </div>\n              \n               \n            </div>\n\n            <div formGroupName=\"PatientClinicSource\" class=\"form-inline\">\n                <label class=\"mx-3\">Clinic Source</label>\n                <div class=\"form-check form-check-inline ml-3\">\n                    <input class=\"form-check-input\" formControlName=\"Doctor\" type=\"checkbox\" id=\"advertisement\"\n                        value=\"option1\">\n                    <label class=\"form-check-label\" for=\"Doctor\">Doctor</label>\n                </div>\n                <div class=\"form-check form-check-inline ml-3\">\n                    <input class=\"form-check-input\" formControlName=\"Hospital\" type=\"checkbox\" id=\"Hospital\"\n                        value=\"option2\">\n                    <label class=\"form-check-label\" for=\"Hospital\">Hospital</label>\n                </div>\n\n                \n                <div class=\"form-check form-check-inline ml-3\">\n                    <input class=\"form-check-input\" formControlName=\"NursingHome\" type=\"checkbox\" id=\"others\" value=\"option3\"\n                        >\n                    <label class=\"form-check-label\" for=\"others\">Nursing Home</label>\n                </div>\n                <div class=\"form-check form-check-inline ml-3\">\n                    <input class=\"form-check-input\" formControlName=\"Polyclinic\" type=\"checkbox\" id=\"others\" value=\"option3\"\n                        >\n                    <label class=\"form-check-label\" for=\"Polyclinic\">Polyclinic</label>\n                </div>\n                <div class=\"form-check form-check-inline ml-3\">\n                    <input class=\"form-check-input\" formControlName=\"MedicineShop\" type=\"checkbox\" id=\"others\" value=\"option3\">\n                    <label class=\"form-check-label\" for=\"Medicine Shop\">Medicine Shop</label>\n                </div>\n                <div class=\"form-check form-check-inline ml-3\">\n                    <input class=\"form-check-input\" formControlName=\"RelativeFriend\" type=\"checkbox\" id=\"others\" value=\"option3\">\n                    <label class=\"form-check-label\" for=\"RelativeFriend\">Relative/Friend</label>\n                </div>\n                <div class=\"form-check form-check-inline ml-3\">\n                    <input class=\"form-check-input\" formControlName=\"ClinicSignBoard\" type=\"checkbox\" id=\"others\" value=\"option3\"\n                        >\n                    <label class=\"form-check-label\" for=\"Clinic SignBoard\">Clinic SignBoard</label>\n                </div>\n                <div class=\"form-check form-check-inline ml-3\">\n                    <input class=\"form-check-input\" formControlName=\"FlexBanner\" type=\"checkbox\" id=\"others\" value=\"option3\"\n                        >\n                    <label class=\"form-check-label\" for=\"Flex/Banner\">Flex/Banner</label>\n                </div>\n                <div class=\"form-check form-check-inline ml-3\">\n                    <input class=\"form-check-input\" formControlName=\"LeafletFlyers\" type=\"checkbox\" id=\"others\" value=\"option3\"\n                        >\n                    <label class=\"form-check-label\" for=\"Leaflet/Flyers\">Leaflet/Flyers</label>\n                </div>\n                <div class=\"form-check form-check-inline ml-3\">\n                    <input class=\"form-check-input\" formControlName=\"Newspaper\" type=\"checkbox\" id=\"others\" value=\"option3\"\n                        >\n                    <label class=\"form-check-label\" for=\"Newspaper\">Newspaper</label>\n                </div>\n                <div class=\"form-check form-check-inline ml-3\">\n                    <input class=\"form-check-input\" formControlName=\"ElectronicMedia\" type=\"checkbox\" id=\"others\" value=\"option3\"\n                        >\n                    <label class=\"form-check-label\" for=\"Electronic Media\">Electronic Media</label>\n                </div>\n                <div class=\"form-check form-check-inline ml-3\">\n                    <input class=\"form-check-input\" formControlName=\"Website\" type=\"checkbox\" id=\"others\" value=\"option3\"\n                        >\n                    <label class=\"form-check-label\" for=\"Website\">Website</label>\n                </div>\n                <div class=\"form-check form-check-inline ml-3\">\n                    <input class=\"form-check-input\" formControlName=\"Facebook\" type=\"checkbox\" id=\"others\" value=\"option3\"\n                       >\n                    <label class=\"form-check-label\" for=\"Facebook\">Facebook</label>\n                </div>\n                <div class=\"form-check form-check-inline ml-3\">\n                    <input class=\"form-check-input\" formControlName=\"SocialMedia\" type=\"checkbox\" id=\"others\" value=\"option3\"\n                       >\n                    <label class=\"form-check-label\" for=\"SocialMedia\">Social Media</label>\n                </div>\n                <div class=\"form-check form-check-inline ml-3\">\n                    <input class=\"form-check-input\" formControlName=\"Others\" (change)=\"showothersreasonbox\" type=\"checkbox\" id=\"others\" value=\"option3\"\n                       >\n                    <label class=\"form-check-label\" for=\"Others\">Others</label>\n                </div>\n                <div class=\"form-group ml-3 mb-2\" *ngIf=\"showothersreason\">\n                    <input class=\"form-control\" formControlName=\"othersreason\" type=\"text\" id=\"others\" value=\"option3\">\n\n                </div>\n\n            </div>\n\n\n        </div>\n\n\n        <br>\n        <br>\n\n        <div class=\"card mt-2\">\n            <div class=\"card-header\">\n                <h3 class=\"card-title\">Patient Appointment Details</h3>\n            </div>\n\n            <div class=\"row\">\n                <!-- <div class=\"col-md\">\n                    <div class=\"form-group mx-3 mt-2\">\n                        <label>Patient Appointment Date</label>\n                        <br>\n                        <mat-form-field>\n                            <mat-label>Choose a date</mat-label>\n                            <input matInput [matDatepicker]=\"picker\" formControlName=\"PatientAppointmentDate\">\n                            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                            <mat-datepicker #picker></mat-datepicker>\n                        </mat-form-field>\n                    </div>\n                </div> -->\n                <div class=\"col-md\">\n                    <div class=\"form-group mx-3 mt-2\">\n                        <label for=\"VisitingBranch\">Visiting Branch</label>\n                        <select [ngClass]=\"{'border-danger': formErrors.VisitingBranch}\" (blur)=\"logValidationErrors()\" formControlName=\"VisitingBranch\" class=\"form-control\" id=\"VisitingBranch\">\n                            <option value=\"\" disabled>Select</option>\n                            <option *ngFor=\"let branch of branches\" value={{branch.name}}>{{branch.name}}</option>\n                        </select>\n                        <span *ngIf=\"formErrors.VisitingBranch\" [ngClass]=\"{'text-danger': formErrors.VisitingBranch}\">\n\n                            {{formErrors.VisitingBranch}}\n        \n                        </span>\n                    </div>\n                    \n                </div>\n\n                <div class=\"col-md\">\n                    <div class=\"form-group mx-3 mt-2\">\n                        <label for=\"PatientReferredBy\">Patient Referred By</label>\n                        <select formControlName=\"PatientReferredBy\" [ngClass]=\"{'border-danger': formErrors.PatientReferredBy}\" (blur)=\"logValidationErrors()\" class=\"form-control\" id=\"PatientReferredBy\">\n                            <option value=\"\" disabled>Select</option>\n                            <option *ngFor=\"let patientreferrer of patientreferred\" value={{patientreferrer.name}}>\n                                {{patientreferrer.name}}</option>\n                        </select>\n                        <span *ngIf=\"formErrors.PatientReferredBy\" [ngClass]=\"{'text-danger': formErrors.PatientReferredBy}\">\n\n                            {{formErrors.PatientReferredBy}}\n        \n                        </span>\n                    </div>\n                </div>\n\n                <div class=\"col-md\">\n                    <div class=\"form-group mx-3 mt-2\">\n                        <label for=\"SelectDepartment\">Select Department</label>\n                        <select [ngClass]=\"{'border-danger': formErrors.SelectDepartment}\" (blur)=\"logValidationErrors()\" formControlName=\"SelectDepartment\" #dvalue (change)=\"changeddepartment(dvalue)\"\n                            class=\"form-control\" id=\"SelectDepartment\">\n                            <option value=\"\" disabled>Select</option>\n                            <option *ngFor=\"let department of departments\" value={{department.name}}>\n                                {{department.name}}</option>\n                        </select>\n\n                        <span *ngIf=\"formErrors.SelectDepartment\" [ngClass]=\"{'text-danger': formErrors.SelectDepartment}\">\n\n                    {{formErrors.SelectDepartment}}\n\n                </span>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <!-- <div class=\"col-md-4\">\n                    <div class=\"form-group mx-3\">\n                        <label for=\"SelectDepartment\">Select Department</label>\n                        <select formControlName=\"SelectDepartment\" #dvalue (change)=\"changeddepartment(dvalue)\" class=\"form-control\" id=\"SelectDepartment\">\n                            <option value=\"\" disabled>Select</option>\n                            <option *ngFor=\"let department of departments\" value={{department.name}}>\n                                {{department.name}}</option>\n                        </select>\n                    </div>\n                </div> -->\n                <div class=\"col-md-4\" *ngIf=\"showpurpose\">\n                    <div class=\"form-group mx-3\">\n                        <label for=\"PurposeofVisit\">Purpose of Visit</label>\n                        <select formControlName=\"PurposeofVisit\" #pvalue (change)=\"changedpurpose(pvalue.value)\"\n                            class=\"form-control\" id=\"PurposeofVisit\">\n                            <option value=\"\" disabled>Select</option>\n                            <option *ngFor=\"let purposes of purpose\" value={{purposes.name}}>\n                                {{purposes.name}}</option>\n                        </select>\n                    </div>\n                </div>\n                <div class=\"col-md-4\" *ngIf=\"showtreatmenttype\">\n                    <div class=\"form-group mx-3\">\n                        <label for=\"TreatmentType<\">Treatment Type</label>\n                        <select formControlName=\"TreatmentType\" multiple #dvalue (change)=\"treatmentype(dvalue.value)\"\n                            class=\"form-control\" id=\"TreatmentType\">\n                            <option value=\"\" disabled>Select</option>\n                            <option *ngFor=\"let treatments of treatment\" value={{treatments.field_treatment_name}}>\n                                {{treatments.field_treatment_name}}</option>\n                        </select>\n\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-md-10\">\n                <button type=\"submit\" [disabled]=\"patientForm.invalid\" class=\"btn btn-primary\">Submit</button>\n                <button type=\"button\" class=\"ml-2 btn btn-info\" (click)=\"loadvalues()\" data-toggle=\"modal\" data-target=\"#exampleModal\">Load Data</button>\n            </div>\n\n        </div>\n\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { PatientServicesService } from 'src/app/patient-services.service';\n\n@Component({\n  selector: 'app-patient-search',\n  templateUrl: './patient-search.component.html',\n  styleUrls: ['./patient-search.component.css']\n})\nexport class PatientSearchComponent implements OnInit {\n  registrationvalue: any;\n  checkuser: import(\"d:/patient/patient-services/src/app/patient\").IEmployee[];\n  disablestatus: boolean;\n  enablestatus: boolean;\n\n  constructor(private _patientService:PatientServicesService) { }\n\n  ngOnInit() {\n  }\n\n  patientValidate(regvalue) {\n    this.registrationvalue = regvalue;\n    this._patientService.validateuser(regvalue)\n      .subscribe(data => {\n        if(data){\n          this.checkuser = data;\n          console.log(this.checkuser);\n        }\n        \n        \n        if (Object.keys(this.checkuser).length == 1) {\n          this.disablestatus = true;\n          this.enablestatus = false;\n        }\n        else {\n          this.enablestatus = true;\n        }\n      });\n\n  }\n\n}\n","<div class=\"form-group\">\n    <div class=\"row\">\n        <div class=\"col-md-10\">\n            <label for=\"exampleInputEmail1\">Enter Patient ID</label>\n            <input type=\"text\" class=\"form-control\" #regvalue id=\"exampleInputEmail1\"\n                [disabled]=\"disablestatus\" aria-describedby=\"emailHelp\">\n\n        </div>\n        <div class=\"col-md-2 mt-4\"> <button type=\"button\" [disabled]=\"regvalue.value?false:true\"\n                class=\" mt-2 btn btn-primary\" (click)=\"patientValidate(regvalue.value)\">Validate</button></div>\n    </div>\n\n</div>","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\n\r\n@Directive({\r\n  selector: 'input[numbersOnly]'\r\n})\r\nexport class NumberDirective {\r\n\r\n  constructor(private _el: ElementRef) { }\r\n\r\n  @HostListener('input', ['$event']) onInputChange(event) {\r\n    const initalValue = this._el.nativeElement.value;\r\n    this._el.nativeElement.value = initalValue.replace(/[^0-9]*/g, '');\r\n    if ( initalValue !== this._el.nativeElement.value) {\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}