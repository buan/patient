{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/material/material.module.ts","webpack:///src/app/patient-services.service.ts","webpack:///src/app/patient/patient-add-doctor/patient-add-doctor.component.ts","webpack:///src/app/patient/patient-add-doctor/patient-add-doctor.component.html","webpack:///src/app/patient/patient-appointment-add/patient-appointment-add.component.ts","webpack:///src/app/patient/patient-appointment-add/patient-appointment-add.component.html","webpack:///src/app/patient/patient-registration/patient-registration.component.ts","webpack:///src/app/patient/patient-registration/patient-registration.component.html","webpack:///src/app/patient/patient-search/patient-search.component.ts","webpack:///src/app/patient/patient-search/patient-search.component.html","webpack:///src/app/patient/shared/numbers-only.directive.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","Material","MaterialModule","PatientServicesService","http","_urlforpatientreferred","_urlforbranch","_urlfordepartments","_urlforpurpose","_urlforme","_urlfortreatmenttype","_urlforcreatepatient","_urlforcreatepatientappointment","_urltovalidateuser","_urltoaddoctor","_urltocheckforprescription","_urltocheckforuploadprescription","headers","get","treatment","uid","console","log","value","PatientClinicSource","totalitemlist","Object","forEach","item","slice","data","PatientRegistration","PatientName","PatientAge","PatientContactNumber","PatientGender","post","patientreference","TreatmentType","treatmenttype","VisitingBranch","PatientReferredBy","SelectDepartment","PurposeofVisit","name","value1","value2","nid","contact","address","patch","regvalue","base64","type","includes","Date","getTime","fid","providedIn","PatientAddDoctorComponent","_patientService","doctorsavedstatus","showmedicalexecutive","showaddoctor","mesavedstatus","disablestatus","addoctor","subscribe","purpose","dname1","addME","dname2","getMElist","mes","addme","adddoc","PatientAppointmentAddComponent","fb","router","enablestatus","prescription_upload_status","showappointment","showdetailsupdate","formErrors","validationMessages","addappointment","group","required","addcontact","PatientAddress","addprescription","getBranch","branches","getPatientReferred","patientreferred","getDepartments","departments","getpurpose","getRawValue","updatepatientdetails","checkuser","createanotherappointment","selectedpurpose","showtreatmenttype","patchValue","$event","readThis","target","inputValue","file","files","myReader","FileReader","onloadend","uploadtype","image","result","split","readAsDataURL","uploadprescription","attachprescription","registrationvalue","nodeid","setTimeout","navigate","controls","key","abstractControl","logValidationErrors","valid","touched","dirty","messages","errorKey","errors","selecteddepartments","showpurpose","gettreatmentype","showprescription","checkprescription","prescriptionstatus","field_patient_prescription","validateuser","length","patientValidate","PatientRegistrationComponent","datepipe","showothersreason","patientsavedstatus","currentDate","latest_date","transform","patientForm","disabled","PatientReferredPrescription","Doctor","Hospital","NursingHome","Polyclinic","MedicineShop","RelativeFriend","ClinicSignBoard","FlexBanner","LeafletFlyers","Newspaper","ElectronicMedia","Website","Facebook","SocialMedia","Others","othersreason","onSubmit","onFileSelected","changeddepartment","loadvalues","PatientSearchComponent","NumberDirective","_el","event","initalValue","nativeElement","replace","stopPropagation","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PatientRegistrationComponent } from './patient/patient-registration/patient-registration.component';\nimport { PatientAppointmentAddComponent } from './patient/patient-appointment-add/patient-appointment-add.component';\nimport { PatientServicesService } from './patient-services.service';\nimport { PatientSearchComponent } from './patient/patient-search/patient-search.component';\nimport { PatientAddDoctorComponent } from './patient/patient-add-doctor/patient-add-doctor.component';\n\n\n\nconst routes: Routes = [\n  { path: 'create', component: PatientRegistrationComponent },\n  { path: 'addappointment', component: PatientAppointmentAddComponent },\n  { path: 'search', component: PatientSearchComponent },\n  { path: 'add-doctor', component: PatientAddDoctorComponent },\n  { path: '', redirectTo: '/create', pathMatch: 'full' }\n  ];\n  \n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'patient-services';\n}\n","<div class=\"container-fluid\">\n  <nav class=\"navbar navbar-expand-lg navbar-light bg-primary \">\n    <a class=\"text-white navbar-brand\" href=\"#\">\n      <img src=\"../assets/images/copy.jpg\" width=\"40px\" height=\"40px\" class=\"d-inline-block align-top\" alt=\"\">\n    </a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n  \n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul class=\"navbar-nav mr-auto\">\n        \n        <li class=\"nav-item\">\n          <a routerLinkActive=\"font-weight-bold\" routerLink=\"create\" class=\"nav-link text-white\" href=\"#\">Register Patient</a>\n        </li>\n\n        <li class=\"nav-item\">\n          <a routerLinkActive=\"font-weight-bold\" routerLink=\"addappointment\" class=\"nav-link text-white\" href=\"#\">Patient Services</a>\n        </li>\n\n        <li class=\"nav-item\">\n          <a routerLinkActive=\"font-weight-bold\" routerLink=\"search\" class=\"nav-link text-white\" href=\"#\">Search Patient</a>\n        </li>\n\n        <li class=\"nav-item\">\n          <a routerLinkActive=\"font-weight-bold\" routerLink=\"add-doctor\" class=\"nav-link text-white\" href=\"#\">Add Doctor</a>\n        </li>\n\n      </ul>\n   \n    </div>\n  </nav>\n  <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from './material/material.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { DatePipe } from '@angular/common'\nimport { PatientRegistrationComponent } from './patient/patient-registration/patient-registration.component';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\nimport { PatientAppointmentAddComponent } from './patient/patient-appointment-add/patient-appointment-add.component';\nimport { PatientSearchComponent } from './patient/patient-search/patient-search.component';\nimport { PatientAddDoctorComponent } from './patient/patient-add-doctor/patient-add-doctor.component';\nimport { NumberDirective } from './patient/shared/numbers-only.directive';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PatientRegistrationComponent,\n    PatientAppointmentAddComponent,\n    PatientSearchComponent,\n    PatientAddDoctorComponent,\n    NumberDirective\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    FormsModule,\n    HttpClientModule,\n    NoopAnimationsModule\n  ],\n  providers: [DatePipe],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nconst Material = [\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatBadgeModule,\n  MatIconModule,\n  MatProgressSpinnerModule,\n  MatToolbarModule,\n  MatSidenavModule,\n  MatMenuModule,\n  MatListModule,\n  MatDividerModule,\n  MatGridListModule,\n  MatExpansionModule,\n  MatTabsModule,\n  MatCardModule,\n  MatStepperModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatSelectModule,\n  MatAutocompleteModule,\n  MatCheckboxModule,\n  MatRadioModule,\n  MatDatepickerModule,\n  MatNativeDateModule,\n  MatTooltipModule,\n  MatSnackBarModule,\n  MatDialogModule,\n  MatTableModule,\n  MatSortModule,\n  MatPaginatorModule\n];\n\n@NgModule({\n  imports: [Material],\n  exports: [Material]\n})\nexport class MaterialModule {}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { IEmployee } from './patient';\nimport { Observable } from 'rxjs/internal/Observable';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PatientServicesService {\n  private _urlforpatientreferred: string = \"http://localhost/drupal8dev/doctor-list\";\n  private _urlforbranch: string = \"http://localhost/drupal8dev/branch\";\n  private _urlfordepartments: string = \"http://localhost/drupal8dev/departments\";\n  private _urlforpurpose: string = \"http://localhost/drupal8dev/purpose\";\n  private _urlforme: string = \"http://localhost/drupal8dev/me\";\n  private _urlfortreatmenttype: string = \"http://localhost/drupal8dev/treatment\";\n  private _urlforcreatepatient: string = \"http://localhost/drupal8dev/entity/user?_format=hal_json\";\n  private _urlforcreatepatientappointment: string = \"http://localhost/drupal8dev/entity/node?_format=hal_json\";\n  private _urltovalidateuser: string = \"http://localhost/drupal8dev/findonepatient\";\n  private _urltoaddoctor: string = \"http://localhost/drupal8dev/entity/taxonomy_term?_format=hal_json\";\n  private _urltocheckforprescription: string = \"http://localhost/drupal8dev/checkprescription\";\n  private _urltocheckforuploadprescription: string = \"http://localhost/drupal8dev/entity/file?_format=hal_json\";\n  private headers: any = { 'Content-Type': 'application/hal+json', 'Authorization': 'Basic YWRtaW46YWRtaW4=', 'X-CSRF-Token': 'wGq8Jno6Sd8zCNa7I70vV7dWWiZtEtrbRrM9739zwhI' }\n\n  constructor(private http: HttpClient) { }\n\n  getPatientReferred(): Observable<IEmployee[]> {\n    return this.http.get<IEmployee[]>(this._urlforpatientreferred);\n  }\n  getBranch(): Observable<IEmployee[]> {\n    return this.http.get<IEmployee[]>(this._urlforbranch);\n  }\n\n  getDepartments(): Observable<IEmployee[]> {\n    return this.http.get<IEmployee[]>(this._urlfordepartments);\n  }\n\n  getpurpose(): Observable<IEmployee[]> {\n    return this.http.get<IEmployee[]>(this._urlforpurpose);\n  }\n  getMElist(): Observable<IEmployee[]> {\n    return this.http.get<IEmployee[]>(this._urlforme);\n  }\n\n  gettreatmentype(treatment): Observable<IEmployee[]> {\n    return this.http.get<IEmployee[]>(this._urlfortreatmenttype + \"/\" + treatment);\n  }\n  validateuser(uid): Observable<IEmployee[]> {\n    console.log(this._urltovalidateuser + \"/\" + uid)\n    return this.http.get<IEmployee[]>(this._urltovalidateuser + \"/\" + uid);\n  }\n\n  createpatient(value): Observable<IEmployee[]> {\n    console.log(value.PatientClinicSource);\n    let totalitemlist = '';\n\n    Object.keys(value.PatientClinicSource).forEach(item => {\n\n      console.log(item); // key\n      console.log(value.PatientClinicSource[item]); // value\n      if (value.PatientClinicSource[item] == true) {\n        totalitemlist = item + \"+\" + totalitemlist;\n      }\n\n\n    });\n    totalitemlist = totalitemlist.slice(0, -1);\n\n    //save as a patient\n    let data = {\n      \"_links\": {\n\n        \"type\": {\n\n          \"href\": \"http://localhost/drupal8dev/rest/type/user/user\"\n\n        }\n\n      },\n\n\n      \"name\": [{\n        \"value\": value.PatientRegistration\n      },\n      ],\n      \"roles\": [{\n        \"target_id\": \"patient\"\n      },\n      ],\n      \"status\": [{\n        \"value\": 1\n      },\n      ],\n      \"field_clinic_source\": [{ \"value\": totalitemlist }],\n      \"field_patient_name\": [{ \"value\": value.PatientName }],\n      \"field_patient_address\": [{ \"value\": value.PatientName }],\n      \"field_patient_age\": [{ \"value\": value.PatientAge }],\n      \"field_patient_contact_number\": [{ \"value\": value.PatientContactNumber }],\n      \"field_patient_sex\": [{ \"value\": value.PatientGender }],\n\n\n    };\n    return this.http.post<IEmployee[]>(this._urlforcreatepatient, data, { headers: this.headers });\n  }\n  createpatientappointment(value, patientreference): Observable<IEmployee[]> {\n    //save as a patient appointment\n    console.log(patientreference.uid[0].value);\n    console.log(value.TreatmentType);\n    let treatmenttype = '';\n    if (value.TreatmentType) {\n      value.TreatmentType.forEach((value) => {\n        treatmenttype = value + \"+\" + treatmenttype;\n\n      });\n    }\n\n    treatmenttype = treatmenttype.slice(0, -1);\n    let data = {\n      \"_links\": {\n\n        \"type\": {\n\n          \"href\": \"http://localhost/drupal8dev/rest/type/node/appointment\"\n\n        }\n\n      },\n\n\n      \"title\": [{\n        \"value\": value.PatientRegistration\n      },\n      ],\n      \"field_branch_name\": [{\n        \"value\": value.VisitingBranch\n      },\n      ],\n      \"field_type_of_treatment\": [{ \"value\": treatmenttype }],\n      \"field_doctor_referred\": [{ \"value\": value.PatientReferredBy }],\n      \"field_department\": [{ \"value\": value.SelectDepartment }],\n      \"field_patient\": [{ \"target_id\": patientreference.uid[0].value }],\n      \"field_purpose\": [{ \"value\": value.PurposeofVisit }],\n\n    };\n    return this.http.post<IEmployee[]>(this._urlforcreatepatientappointment, data, { headers: this.headers });\n  }\n  createanotherappointment(value, patientreference): Observable<IEmployee[]> {\n    //save as a patient appointment\n    console.log(patientreference[0].uid);\n    console.log(value);\n    let treatmenttype = '';\n    if (value.TreatmentType) {\n      value.TreatmentType.forEach(function (value) {\n        treatmenttype = value + \"+\" + treatmenttype;\n\n      });\n    }\n\n    treatmenttype = treatmenttype.slice(0, -1);\n    let data = {\n      \"_links\": {\n\n        \"type\": {\n\n          \"href\": \"http://localhost/drupal8dev/rest/type/node/appointment\"\n\n        }\n\n      },\n\n\n      \"title\": [{\n        \"value\": patientreference[0].name\n      },\n      ],\n      \"field_branch_name\": [{\n        \"value\": value.VisitingBranch\n      },\n      ],\n      \"field_type_of_treatment\": [{ \"value\": treatmenttype }],\n      \"field_doctor_referred\": [{ \"value\": value.PatientReferredBy }],\n      \"field_department\": [{ \"value\": value.SelectDepartment }],\n      \"field_patient\": [{ \"target_id\": patientreference[0].uid }],\n      \"field_purpose\": [{ \"value\": value.PurposeofVisit }],\n\n    };\n    return this.http.post<IEmployee[]>(this._urlforcreatepatientappointment, data, { headers: this.headers });\n  }\n\n  addoctor(value1, value2): Observable<IEmployee[]> {\n    let data = {\n\n      \"_links\": {\n\n        \"type\": {\n\n          \"href\": \"http://localhost/drupal8dev/rest/type/taxonomy_term/doctor_list\"\n\n        }\n\n      },\n      \"vid\": [\n        {\n          \"target_id\": \"doctor_list\"\n        }\n      ],\n\n\n      \"name\": [{\n        \"value\": value1.value\n      }],\n\n      \"field_marketing_executive\": [{\n        \"target_id\": value2.value\n      }\n\n\n      ]\n\n    };\n    return this.http.post<IEmployee[]>(this._urltoaddoctor, data, { headers: this.headers });\n  }\n  addME(value1): Observable<IEmployee[]> {\n    let data = {\n\n      \"_links\": {\n\n        \"type\": {\n\n          \"href\": \"http://localhost/drupal8dev/rest/type/taxonomy_term/marketing_executive\"\n\n        }\n\n      },\n      \"vid\": [\n        {\n          \"target_id\": \"marketing_executive\"\n        }\n      ],\n\n\n      \"name\": [{\n        \"value\": value1.value\n      }]\n\n    };\n    return this.http.post<IEmployee[]>(this._urltoaddoctor, data, { headers: this.headers });\n  }\n\n  updatepatientdetails(nid, contact, address): Observable<IEmployee[]> {\n    let data = {\n\n      \"_links\": {\n\n        \"type\": {\n\n          \"href\": \"http://localhost/drupal8dev/rest/type/user/user\"\n\n        }\n\n      },\n\n\n      \"field_patient_contact_number\": [{\n        \"value\": contact\n      }\n      ],\n\n      \"field_patient_address\": [{\n        \"value\": address\n      }\n      ]\n\n    };\n    return this.http.patch<IEmployee[]>(\"http://localhost/drupal8dev/user/\" + nid + \"?_format=hal_json\", data, { headers: this.headers });\n\n  }\n\n  checkprescription(regvalue): Observable<IEmployee[]> {\n    console.log(regvalue);\n    return this.http.get<IEmployee[]>(this._urltocheckforprescription + \"/\" + regvalue);\n  }\n\n  uploadprescription(name, base64, type): Observable<IEmployee[]> {\n    if (type.includes(\"image\")) {\n      type = \"image\"\n    }\n    else {\n      type = \"document\"\n    }\n    let data = {\n\n      \"_links\": {\n\n        \"type\": {\n\n          \"href\": \"http://localhost/drupal8dev/rest/type/file/document\"\n\n        }\n\n      },\n\n\n      \"uri\": [{ \"value\": \"public:\\/\\/\" + name }],\n\n      \"uid\": [{ \"target_id\": 1, \"target_type\": \"user\" }],\n      \"filename\": [{ \"value\": new Date().getTime() + name }],\n      \"filemime\": [{ \"value\": type }],\n      \"data\": [{\n        \"value\": base64\n      }]\n    };\n    console.log(type);\n    return this.http.post<IEmployee[]>(this._urltocheckforuploadprescription, data, { headers: this.headers });\n  }\n\n  attachprescription(value, regvalue, nid): Observable<IEmployee[]> {\n    console.log(value);\n    let data = {\n\n      \"_links\": {\n\n        \"type\": {\n\n          \"href\": \"http://localhost/drupal8dev/rest/type/node/appointment\"\n\n        }\n\n      },\n\n\n      \"title\": [{\n        \"value\": regvalue\n      }\n      ],\n\n      \"field_patient_prescription\": [{\n        \"target_id\": value.fid[0].value\n      }\n      ]\n\n    }\n    return this.http.patch<IEmployee[]>(\"http://localhost/drupal8dev/node/\" + nid + \"?_format=hal_json\", data, { headers: this.headers });\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { PatientServicesService } from 'src/app/patient-services.service';\n\n@Component({\n  selector: 'app-patient-add-doctor',\n  templateUrl: './patient-add-doctor.component.html',\n  styleUrls: ['./patient-add-doctor.component.css']\n})\nexport class PatientAddDoctorComponent implements OnInit {\n  image: string | ArrayBuffer;\n  purpose: import(\"d:/patient/patient-services/src/app/patient\").IEmployee[];\n  doctorsavedstatus: boolean = false;\n  dname1: string;\n  dname2: string;\n  me: string;\n  mes: import(\"d:/patient/patient-services/src/app/patient\").IEmployee[];\n  showmedicalexecutive: boolean = false;\n  showaddoctor: boolean = false;\n  mesavedstatus: boolean = false;\n  disablestatus: boolean = false;\n\n  constructor(private _patientService: PatientServicesService) { }\n\n  ngOnInit() {\n\n  }\n  doctoradd(value1, value2) {\n    this._patientService.addoctor(value1, value2)\n      .subscribe(data => {\n        this.purpose = data\n        if (this.purpose) {\n          this.doctorsavedstatus = true;\n          this.mesavedstatus = false\n          this.dname1 = ''\n        }\n      });\n\n  }\n  medicalexecutiveadd(value1) {\n    console.log(value1.value);\n    this._patientService.addME(value1)\n      .subscribe(data => {\n        this.purpose = data\n        if (this.purpose) {\n          this.doctorsavedstatus = false;\n          this.mesavedstatus = true;\n          this.dname2 = ''\n        }\n      });\n  }\n\n  addme() {\n    this.showaddoctor = false;\n    this.showmedicalexecutive = true;\n  }\n  adddoc() {\n    this._patientService.getMElist()\n      .subscribe(data => this.mes = data);\n\n    this.showaddoctor = true;\n    this.showmedicalexecutive = false;\n  }\n}\n","<div class=\"container mt-3\">\n    <div class=\"row\">\n        <div class=\"col text-center \">\n            <div class=\"btn-group \" role=\"group\">\n                <button type=\"button\" class=\"btn btn-secondary mr-2 btn-info\" (click)=\"addme()\">\n                    Add Medical Executive</button>\n                <button type=\"button\" class=\"btn btn-secondary mr-2 btn-info\" (click)=\"adddoc()\">Add\n                    Doctor</button>\n            </div>\n        </div>\n\n    </div>\n    <div class=\"card mt-3\" *ngIf=\"showaddoctor\">\n        <div class=\"card-header\">\n           Add Doctor\n        </div>\n        <div class=\"card-body\">\n            <div class=\"alert mt-2 alert-success\" role=\"alert\" *ngIf=\"doctorsavedstatus\">\n                <strong>Doctor Name</strong> Added\n                <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            \n            </div>\n            <div class=\"form-group\">\n                <div class=\"row\">\n                    <div class=\"col-md-5\">\n                        <label for=\"exampleInputEmail1\">Enter Doctor Name</label>\n                        <input type=\"text\" [(ngModel)]=\"dname1\" class=\"form-control\" #dnamevalue1 id=\"exampleInputEmail1\"\n                            [disabled]=\"disablestatus\" aria-describedby=\"emailHelp\">\n            \n                    </div>\n            \n                    <div class=\"col-md-5\">\n                        <label for=\"exampleFormControlSelect1\">Select Marketing Executive</label>\n                        <select class=\"form-control\" [(ngModel)]=\"me\" #mevalue id=\"exampleFormControlSelect1\">\n                            <option value=\"\" disabled selected=\"selected\">Select</option>\n                            <option *ngFor=\"let me of mes\" value={{me.tid}}>{{me.name}}</option>\n                        </select>\n                    </div>\n            \n                    <div class=\"col-md-2 mt-4\"> <button type=\"button\" [disabled]=\"dnamevalue1.value && mevalue.value?false:true\"\n                            class=\" mt-2 btn btn-primary\" (click)=\"doctoradd(dnamevalue1,mevalue)\">Add</button></div>\n                </div>\n            \n            </div>\n        </div>\n    </div>\n\n    <div class=\"card mt-3\" *ngIf=\"showmedicalexecutive\">\n        <div class=\"card-header\">\n           Add Medical Executive\n        </div>\n        <div class=\"card-body\">\n            <div class=\"alert mt-2 alert-success\" role=\"alert\" *ngIf=\"mesavedstatus\">\n                <strong>Medical Executive</strong> Added\n                <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            \n            </div>\n            <div class=\"form-group\">\n                <div class=\"row\">\n                    <div class=\"col-md-10\">\n                        <label for=\"exampleInputEmail1\">Enter Medical Executive</label>\n                        <input type=\"text\" [(ngModel)]=\"dname2\" class=\"form-control\" #dnamevalue2 id=\"exampleInputEmail1\"\n                            [disabled]=\"disablestatus\" aria-describedby=\"emailHelp\">\n            \n                    </div>\n            \n            \n            \n                    <div class=\"col-md-2 mt-4\"> <button type=\"button\" [disabled]=\"dnamevalue2.value?false:true\"\n                            class=\" mt-2 btn btn-primary\" (click)=\"medicalexecutiveadd(dnamevalue2)\">Add</button></div>\n                </div>\n            \n            </div>\n        </div>\n    </div>\n   \n</div>\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { PatientServicesService } from 'src/app/patient-services.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n\n\n@Component({\n  selector: 'app-patient-appointment-add',\n  templateUrl: './patient-appointment-add.component.html',\n  styleUrls: ['./patient-appointment-add.component.css']\n})\nexport class PatientAppointmentAddComponent implements OnInit {\n  checkuser: any;\n  userName: any;\n  usernotexist: string;\n  disablestatus: boolean = false;\n  enablestatus: boolean = false;\n  prescription_upload_status: boolean = false;\n  addappointment: FormGroup;\n  addcontact: FormGroup;\n  branches: import(\"d:/patient/patient-services/src/app/patient\").IEmployee[];\n  patientreferred: import(\"d:/patient/patient-services/src/app/patient\").IEmployee[];\n  departments: import(\"d:/patient/patient-services/src/app/patient\").IEmployee[];\n  purpose: import(\"d:/patient/patient-services/src/app/patient\").IEmployee[];\n  selectedpurpose: any;\n  showtreatmenttype: boolean;\n  showprescription: boolean;\n  prescriptionstatus: import(\"d:/patient/patient-services/src/app/patient\").IEmployee[];\n  patientForm: any;\n  selecteddepartments: any;\n  showpurpose: boolean;\n  showappointment: boolean = false;\n  showdetailsupdate: boolean = false;\n  treatment: import(\"d:/patient/patient-services/src/app/patient\").IEmployee[];\n  addprescription: FormGroup;upload\n  image: string | ArrayBuffer;\n  registrationvalue: string;\n  uploadtype: File;\n  getfid: import(\"d:/patient/patient-services/src/app/patient\").IEmployee[];\n  nodeid: any;\n\n\n  constructor(private _patientService: PatientServicesService, private fb: FormBuilder,private router: Router) { }\n  formErrors = {\n    'PatientAddress': '',\n    'PatientContactNumber': '',\n\n  };\n\n  // This object contains all the validation messages for this form\n  validationMessages = {\n    'PatientAddress': {\n      'required': 'Patient Address is required.',\n    },\n    'PatientContactNumber': {\n      'required': 'Patient Contact Number is required.',\n    },\n\n  };\n  ngOnInit() {\n    this.addappointment = this.fb.group({\n      // PatientAppointmentDate: [''],\n      VisitingBranch: ['', Validators.required],\n      PatientReferredBy: [''],\n      SelectDepartment: [''],\n      PurposeofVisit: [''],\n      TreatmentType: [''],\n    });\n\n\n    this.addcontact = this.fb.group({\n      PatientAddress: ['', Validators.required],\n      PatientContactNumber: ['', Validators.required],\n    });\n\n    this.addprescription = this.fb.group({\n\n    });\n\n    this._patientService.getBranch()\n      .subscribe(data => this.branches = data);\n\n    this._patientService.getPatientReferred()\n      .subscribe(data => this.patientreferred = data);\n\n    this._patientService.getDepartments()\n      .subscribe(data => this.departments = data);\n\n    this._patientService.getpurpose()\n      .subscribe(data => this.purpose = data);\n  }\n\n  updatecontact(): void {\n    console.log(this.addcontact.getRawValue().PatientAddress);\n    this._patientService.updatepatientdetails(this.checkuser[0].uid, this.addcontact.getRawValue().PatientContactNumber, this.addcontact.getRawValue().PatientAddress)\n      .subscribe(data => console.log(data));\n\n  }\n\n  updateappointment(): void {\n    console.log(this.addappointment.getRawValue());\n    this._patientService.createanotherappointment(this.addappointment.getRawValue(), this.checkuser)\n      .subscribe(data => console.log(data));\n  }\n\n  changedpurpose(value: any): void {\n    console.log(value);\n    this.selectedpurpose = value;\n    if (value == 'Treatment') {\n      this.showtreatmenttype = true;\n    }\n    else {\n      this.showtreatmenttype = false;\n      this.addappointment.patchValue({\n        TreatmentType: '',\n      });\n    }\n  }\n\n  onFileSelected($event) {\n    this.readThis($event.target);\n  }\n\n  readThis(inputValue: any): void {\n    var file: File = inputValue.files[0];\n    var myReader: FileReader = new FileReader();\n\n    myReader.onloadend = (e) => {\n      this.uploadtype=file;\n      this.image = (<string>myReader.result).split('base64,')[1];\n      // this.image=this.image.replace(new RegExp('.*' + Y), '')\n    }\n    myReader.readAsDataURL(file);\n  }\n\n  submitpres(value){\n    console.log(this.uploadtype.name);\n    this._patientService.uploadprescription(this.uploadtype.name,value,this.uploadtype.type)\n    .subscribe(data =>{ \n      if(data){\n        this._patientService.attachprescription(data,this.registrationvalue,this.nodeid).subscribe(data=>{\n          if(data){\n            this.prescription_upload_status=true;\n            setTimeout(()=>{  \n                    this.router.navigate(['/search']);\n               }, 3000);\n          }\n        \n        });\n\n      }    \n  \n    });\n   \n  }\n\n  logValidationErrors(group: FormGroup = this.addcontact): void {\n    // loop through each key in the FormGroup\n    Object.keys(group.controls)\n    .forEach((key: string) => {\n      // Get a reference to the control using the FormGroup.get() method\n      const abstractControl = group.get(key);\n      // If the control is an instance of FormGroup i.e a nested FormGroup\n      // then recursively call this same method (logKeyValuePairs) passing it\n      // the FormGroup so we can get to the form controls in it\n      if (abstractControl instanceof FormGroup) {\n        this.logValidationErrors(abstractControl);\n        // If the control is not a FormGroup then we know it's a FormControl\n\n\n      } else {\n        // console.log('Key = ' + key + ' && Value = ' + abstractControl.value);\n        // abstractControl.disable();\n        this.formErrors[key] = '';\n        if (abstractControl && !abstractControl.valid && (abstractControl.touched || abstractControl.dirty)) {\n          // Get all the validation messages of the form control\n          // that has failed the validation\n          const messages = this.validationMessages[key];\n          // Find which validation has failed. For example required,\n          // minlength or maxlength. Store that error message in the\n          // formErrors object. The UI will bind to this object to\n          // display the validation errors\n          for (const errorKey in abstractControl.errors) {\n            if (errorKey) {\n              this.formErrors[key] += messages[errorKey] + ' ';\n            }\n          }\n        }\n      }\n    });\n  }\n\n\n  changeddepartment(value: any): void {\n    this.selecteddepartments = value.value;\n    console.log(this.selecteddepartments);\n    if (value) {\n      this.showpurpose = true;\n      this._patientService.gettreatmentype(this.selecteddepartments)\n        .subscribe(data => this.treatment = data);\n    }\n  }\n\n  enableappointment() {\n    this.showappointment = true;\n    this.showdetailsupdate = false;\n    this.showprescription = false;\n  }\n\n  enableupdate() {\n    this.showappointment = false;\n    this.showdetailsupdate = true;\n    this.showprescription = false;\n  }\n  enableprescriptionupload() {\n    this._patientService.checkprescription(this.registrationvalue)\n      .subscribe(data =>{\n        this.prescriptionstatus = data[0].field_patient_prescription;\n        this.nodeid=data[0].nid;\n      });\n    this.showappointment = false;\n    this.showdetailsupdate = false;\n    this.showprescription = true;\n  }\n  patientValidate(regvalue) {\n    this.registrationvalue = regvalue;\n    this._patientService.validateuser(regvalue)\n      .subscribe(data => {\n        if(data){\n          this.checkuser = data;\n          console.log(this.checkuser);\n        }\n        \n        \n        if (Object.keys(this.checkuser).length == 1) {\n          this.disablestatus = true;\n          this.enablestatus = false;\n        }\n        else {\n          this.enablestatus = true;\n        }\n      });\n\n  }\n\n\n\n}\n","<div class=\"alert mt-2 alert-danger\" role=\"alert\" *ngIf=\"enablestatus\">\n    <strong>Invalid</strong> Registration ID\n\n</div>\n<div class=\"form-group\">\n    <div class=\"row\">\n        <div class=\"col-md-10\">\n            <label for=\"exampleInputEmail1\">Enter Registration ID</label>\n            <input type=\"text\"  class=\"form-control\" #regvalue id=\"exampleInputEmail1\"\n                [disabled]=\"disablestatus\" aria-describedby=\"emailHelp\">\n\n        </div>\n        <div class=\"col-md-2 mt-4\"> <button type=\"button\" [disabled]=\"regvalue.value?false:true\"\n                class=\" mt-2 btn btn-primary\" (click)=\"patientValidate(regvalue.value)\">Validate</button></div>\n    </div>\n\n</div>\n\n\n<div class=\"container\" *ngIf=\"disablestatus\">\n    <div class=\"row\">\n        <div class=\"col text-center\">\n            <div class=\"btn-group \" role=\"group\">\n                <button type=\"button\" class=\"btn btn-secondary mr-2 btn-info\" (click)=\"enableupdate()\">Update Phone\n                    Number/Address</button>\n                <button type=\"button\" class=\"btn btn-secondary mr-2 btn-info\" (click)=\"enableappointment()\">Add\n                    Sitting</button>\n                <button type=\"button\" class=\"btn btn-secondary btn-info\" (click)=\"enableprescriptionupload()\">Add\n                    Prescription</button>\n            </div>\n        </div>\n\n    </div>\n</div>\n\n<form [formGroup]=\"addcontact\" *ngIf=\"showdetailsupdate\" (ngSubmit)=\"updatecontact()\">\n    <div class=\"card mt-2\">\n        <div class=\"card-header\">\n            <h5 class=\"card-title\">Update Contact Details</h5>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-md\">\n                <div class=\"form-group mx-3\">\n                    <label for=\"PatientAddress\">Address</label>\n                    <textarea formControlName=\"PatientAddress\" class=\"form-control\" id=\"PatientAddress\" rows=\"3\"\n                        [ngClass]=\"{'border-danger': formErrors.PatientAddress}\"\n                        (blur)=\"logValidationErrors()\"></textarea>\n                    <span *ngIf=\"formErrors.PatientAddress\" [ngClass]=\"{'text-danger': formErrors.PatientAddress}\">\n\n                        {{formErrors.PatientAddress}}\n\n                    </span>\n                </div>\n\n            </div>\n\n            <div class=\"col-md\">\n                <div class=\"form-group mx-3\">\n                    <label for=\"PatientContactNumber\">Contact Number</label>\n                    <input type=\"text\" formControlName=\"PatientContactNumber\" numbersOnly class=\"form-control\"\n                        id=\"PatientContactNumber\" placeholder=\"Enter Patient Contact Number\"\n                        [ngClass]=\"{'border-danger': formErrors.PatientContactNumber}\" (blur)=\"logValidationErrors()\">\n                    <span *ngIf=\"formErrors.PatientContactNumber\"\n                        [ngClass]=\"{'text-danger': formErrors.PatientContactNumber}\">\n\n                        {{formErrors.PatientContactNumber}}\n\n                    </span>\n                </div>\n            </div>\n\n\n        </div>\n\n        <div class=\"col-md-10\">\n            <button type=\"submit\" [disabled]=\"addcontact.invalid\" class=\"btn btn-primary\">Submit</button>\n        </div>\n    </div>\n</form>\n\n<form [formGroup]=\"addappointment\" *ngIf=\"showappointment\" (ngSubmit)=\"updateappointment()\">\n    <div class=\"card mt-2\">\n        <div class=\"card-header\">\n            <h5 class=\"card-title\">Patient Appointment Details</h5>\n        </div>\n\n        <div class=\"row\">\n            <!-- <div class=\"col-md\">\n                <div class=\"form-group mx-3 mt-2\">\n                    <label>Patient Appointment Date</label>\n                    <br>\n                    <mat-form-field>\n                        <mat-label>Choose a date</mat-label>\n                        <input matInput [matDatepicker]=\"picker\" formControlName=\"PatientAppointmentDate\">\n                        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                        <mat-datepicker #picker></mat-datepicker>\n                    </mat-form-field>\n                </div>\n            </div> -->\n            <div class=\"col-md\">\n                <div class=\"form-group mx-3 mt-2\">\n                    <label for=\"VisitingBranch\">Visiting Branch</label>\n                    <select formControlName=\"VisitingBranch\" class=\"form-control\" id=\"VisitingBranch\">\n                        <option value=\"\" disabled>Select</option>\n                        <option *ngFor=\"let branch of branches\" value={{branch.name}}>{{branch.name}}</option>\n                    </select>\n                </div>\n\n            </div>\n\n            <div class=\"col-md\">\n                <div class=\"form-group mx-3 mt-2\">\n                    <label for=\"PatientReferredBy\">Patient Referred By</label>\n                    <select formControlName=\"PatientReferredBy\" class=\"form-control\" id=\"PatientReferredBy\">\n                        <option value=\"\" disabled>Select</option>\n                        <option *ngFor=\"let patientreferrer of patientreferred\" value={{patientreferrer.name}}>\n                            {{patientreferrer.name}}</option>\n                    </select>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-md-4\">\n                <div class=\"form-group mx-3\">\n                    <label for=\"SelectDepartment\">Select Department</label>\n                    <select formControlName=\"SelectDepartment\" #dvalue (change)=\"changeddepartment(dvalue)\"\n                        class=\"form-control\" id=\"SelectDepartment\">\n                        <option value=\"\" disabled>Select</option>\n                        <option *ngFor=\"let department of departments\" value={{department.name}}>\n                            {{department.name}}</option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"col-md-4\" *ngIf=\"showpurpose\">\n                <div class=\"form-group\">\n                    <label for=\"PurposeofVisit\">Purpose of Visit</label>\n                    <select formControlName=\"PurposeofVisit\" #pvalue (change)=\"changedpurpose(pvalue.value)\"\n                        class=\"form-control\" id=\"PurposeofVisit\">\n                        <option value=\"\" disabled>Select</option>\n                        <option *ngFor=\"let purposes of purpose\" value={{purposes.name}}>\n                            {{purposes.name}}</option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"col-md-4\" *ngIf=\"showtreatmenttype\">\n                <div class=\"form-group\">\n                    <label for=\"TreatmentType\">Treatment Type</label>\n                    <select multiple formControlName=\"TreatmentType\" class=\"form-control\" id=\"TreatmentType\">\n                        <option value=\"\" disabled>Select</option>\n                        <option *ngFor=\"let treatments of treatment\" value={{treatments.field_treatment_name}}>\n                            {{treatments.field_treatment_name}}</option>\n                    </select>\n\n                </div>\n            </div>\n        </div>\n        <div class=\"col-md-10\">\n            <button type=\"submit\" [disabled]=\"addappointment.invalid\" class=\"btn btn-primary\">Submit</button>\n        </div>\n\n    </div>\n</form>\n\n\n<div class=\"card mt-2\" *ngIf=\"showprescription\">\n    <h5 class=\"card-header\">Prescription Details</h5>\n    <div class=\"card-body\" *ngIf=\"prescriptionstatus;else notShow\">\n        <p>\n            Prescription already uploaded\n        </p>\n\n    </div>\n\n    <ng-template #notShow>\n        <div class=\"alert alert-success\" *ngIf=\"prescription_upload_status\">\n             Prescription uploaded successfuly\n          </div>\n        <input type=\"file\" name=\"\" id=\"\" (change)=\"onFileSelected($event)\" required\n            accept=\"application/pdf, image/jpeg\">\n        <button *ngIf=\"uploadtype\" (click)=\"submitpres(image)\" class=\"btn btn-primary mx-auto\">Submit</button>\n    </ng-template>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormArray } from '@angular/forms';\nimport { DatePipe } from '@angular/common';\nimport { PatientServicesService } from 'src/app/patient-services.service';\nimport { IEmployee } from 'src/app/patient';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-patient-registration',\n  templateUrl: './patient-registration.component.html',\n  styleUrls: ['./patient-registration.component.css']\n})\nexport class PatientRegistrationComponent implements OnInit {\n  currentDate: Date;\n  showpurpose: boolean = false;\n  showtreatmenttype: boolean = false;\n  showothersreason: boolean = false;\n  patientsavedstatus: boolean = false;\n  uploadtype: File;\n  image: string;\n\n  constructor(private fb: FormBuilder, public datepipe: DatePipe, private _patientService: PatientServicesService, private router: Router) { }\n\n  patientForm: FormGroup;\n  patientreferred: IEmployee[];\n  branches: IEmployee[];\n  departments: IEmployee[];\n  selecteddepartments: IEmployee[];\n  purpose: IEmployee[];\n  selectedpurpose: IEmployee[];\n  treatment: IEmployee[];\n  uid: IEmployee[];\n  createpatientresult: any;\n\n\n  formErrors = {\n    'PatientName': '',\n    'PatientAge': '',\n    'PatientAddress': '',\n    'PatientClinicSource': '',\n    'VisitingBranch': '',\n    'PatientReferredBy': '',\n    'SelectDepartment': '',\n    'PurposeofVisit': '',\n\n  };\n\n  // This object contains all the validation messages for this form\n  validationMessages = {\n    'PatientName': {\n      'required': 'Patient Name is required.',\n      'maxlength': 'Patient Name must be less than 20 characters.'\n    },\n    'PatientAge': {\n      'required': 'Patient Age is required.',\n    },\n    'PatientAddress': {\n      'required': 'Patient Address is required.',\n    },\n    'PatientClinicSource': {\n      'required': 'Patient Clinic Source is required.',\n    },\n    'VisitingBranch': {\n      'required': 'Visiting Branch is required.',\n    },\n    'PatientReferredBy': {\n      'required': 'Patient ReferredBy is required.',\n    },\n    'SelectDepartment': {\n      'required': 'Department is required.',\n    },\n    'PurposeofVisit': {\n      'required': 'Purpose of Visit is required.',\n    },\n  };\n\n\n\n\n  ngOnInit() {\n\n    this._patientService.getBranch()\n      .subscribe(data => this.branches = data);\n\n    this._patientService.getPatientReferred()\n      .subscribe(data => this.patientreferred = data);\n\n    this._patientService.getDepartments()\n      .subscribe(data => this.departments = data);\n\n    this._patientService.getpurpose()\n      .subscribe(data => this.purpose = data);\n\n    this.currentDate = new Date();\n    let latest_date = this.datepipe.transform(this.currentDate, 'ddMMyyyyhmmss');\n    latest_date = 'REG' + latest_date\n    this.patientForm = this.fb.group({\n      PatientRegistration: [{ value: latest_date, disabled: true }],\n      PatientName: ['', Validators.required],\n      PatientContactNumber: [''],\n      PatientAge: ['', Validators.required],\n      PatientGender: ['Male'],\n      PatientReferredPrescription: [''],\n      PatientAddress: ['', Validators.required],\n      PatientClinicSource: this.fb.group({\n        Doctor: [''],\n        Hospital: [''],\n        NursingHome: [''],\n        Polyclinic: [''],\n        MedicineShop: [''],\n        RelativeFriend: [''],\n        ClinicSignBoard: [''],\n        FlexBanner: [''],\n        LeafletFlyers: [''],\n        Newspaper: [''],\n        ElectronicMedia: [''],\n        Website: [''],\n        Facebook: [''],\n        SocialMedia: [''],\n        Others: [''],\n        othersreason: [''],\n      }),\n      VisitingBranch: ['', Validators.required],\n      PatientReferredBy: ['', Validators.required],\n      SelectDepartment: ['', Validators.required],\n      PurposeofVisit: ['', Validators.required],\n      TreatmentType: [''],\n    });\n\n  }\n\n\n\n\n\n  loadvalues(): void {\n    this.logValidationErrors(this.patientForm);\n    console.log(this.formErrors);\n  }\n\n\n\n  treatmentype(value: any): void {\n    console.log(value);\n  }\n\n  changedpurpose(value: any): void {\n    console.log(value);\n    this.selectedpurpose = value;\n    if (value == 'Treatment') {\n      this.showtreatmenttype = true;\n    }\n    else {\n      this.showtreatmenttype = false;\n      this.patientForm.patchValue({\n        TreatmentType: '',\n      });\n    }\n  }\n\n  changeddepartment(value: any): void {\n    this.selecteddepartments = value.value;\n    console.log(this.selecteddepartments);\n    if (value) {\n      this.showpurpose = true;\n      this._patientService.gettreatmentype(this.selecteddepartments)\n        .subscribe(data => this.treatment = data);\n    }\n\n  }\n\n  showothersreasonbox(): void {\n    this.showothersreason = !this.showothersreason;\n  }\n\n  logValidationErrors(group: FormGroup = this.patientForm): void {\n    // loop through each key in the FormGroup\n    Object.keys(group.controls).forEach((key: string) => {\n      // Get a reference to the control using the FormGroup.get() method\n      const abstractControl = group.get(key);\n      // If the control is an instance of FormGroup i.e a nested FormGroup\n      // then recursively call this same method (logKeyValuePairs) passing it\n      // the FormGroup so we can get to the form controls in it\n      if (abstractControl instanceof FormGroup) {\n        this.logValidationErrors(abstractControl);\n        // If the control is not a FormGroup then we know it's a FormControl\n\n\n      } else {\n        // console.log('Key = ' + key + ' && Value = ' + abstractControl.value);\n        // abstractControl.disable();\n        this.formErrors[key] = '';\n        if (abstractControl && !abstractControl.valid && (abstractControl.touched || abstractControl.dirty)) {\n          // Get all the validation messages of the form control\n          // that has failed the validation\n          const messages = this.validationMessages[key];\n          // Find which validation has failed. For example required,\n          // minlength or maxlength. Store that error message in the\n          // formErrors object. The UI will bind to this object to\n          // display the validation errors\n          for (const errorKey in abstractControl.errors) {\n            if (errorKey) {\n              this.formErrors[key] += messages[errorKey] + ' ';\n            }\n          }\n        }\n      }\n    });\n  }\n\n  onFileSelected($event) {\n    this.readThis($event.target);\n  }\n  readThis(inputValue: any): void {\n    var file: File = inputValue.files[0];\n    var myReader: FileReader = new FileReader();\n\n    myReader.onloadend = (e) => {\n      this.uploadtype = file;\n      this.image = (<string>myReader.result).split('base64,')[1];\n      console.log(this.image);\n      // this.image=this.image.replace(new RegExp('.*' + Y), '')\n    }\n    myReader.readAsDataURL(file);\n  }\n\n  onSubmit(): void {\n    console.log(this.patientForm.getRawValue().PatientReferredPrescription);\n\n    this._patientService.uploadprescription(this.uploadtype.name, this.image, this.uploadtype.type).subscribe(data => console.log(data) )\n    //     this._patientService.createpatient(this.patientForm.getRawValue())\n    //       .subscribe(data => {\n    //         this.createpatientresult = data;\n    //         console.log(this.createpatientresult);\n    //         setTimeout(()=>{  \n    //           this._patientService.createpatientappointment(this.patientForm.getRawValue(),this.createpatientresult)\n    //           .subscribe(data => console.log(this.createpatientresult));\n    //           this.patientsavedstatus=true;\n    //      }, 1000);\n    //      setTimeout(()=>{  \n    //       this.router.navigate(['/search']);\n    //  }, 2000);\n\n\n    //       });\n\n  }\n\n}\n","\n  \n  \n<div class=\"container-fluid\">\n\n    <form [formGroup]=\"patientForm\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"card mt-2\">\n\n            <div class=\"card-header\">\n                <h3 class=\"card-title\">Patient Details</h3>\n            </div>\n            <div class=\"alert alert-success mt-2 mb-1 mx-2 fade show\" role=\"alert\" *ngIf=\"patientsavedstatus\">\n                <strong> Patient Details saved</strong>\n                <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"form-group mx-3\">\n                <label for=\"regnum\">Registration Number</label>\n                <input type=\"text\" formControlName=\"PatientRegistration\" class=\"form-control\" id=\"regnum\"\n                    aria-describedby=\"regnum\">\n\n            </div>\n            <div class=\"form-group mx-3\">\n                <label for=\"patientname\"> Name</label>\n                <input type=\"text\" [ngClass]=\"{'border-danger': formErrors.PatientName}\" formControlName=\"PatientName\"\n                    class=\"form-control\" id=\"patientname\" placeholder=\"Enter Patient Name\"\n                    (blur)=\"logValidationErrors()\">\n                <span *ngIf=\"formErrors.PatientName\" [ngClass]=\"{'text-danger': formErrors.PatientName}\">\n\n                    {{formErrors.PatientName}}\n\n                </span>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"col-md\">\n                    <div class=\"form-group mx-3\">\n                        <label for=\"PatientContactNumber\">Contact Number</label>\n                        <input type=\"text\" formControlName=\"PatientContactNumber\" class=\"form-control\"\n                            id=\"PatientContactNumber\" placeholder=\"Enter Patient Contact Number\"\n                            (blur)=\"logValidationErrors()\">\n                      \n                    </div>\n                </div>\n\n                \n                <div class=\"col-md\">\n                    <div class=\"form-group mx-3\">\n                        <label for=\"PatientAge\">Age</label>\n                        <input type=\"text\" numbersOnly formControlName=\"PatientAge\" class=\"form-control\" id=\"PatientAge\"\n                            placeholder=\"Enter Patient Age\" [ngClass]=\"{'border-danger': formErrors.PatientAge}\"\n                            (blur)=\"logValidationErrors()\">\n                        <span *ngIf=\"formErrors.PatientAge\" [ngClass]=\"{'text-danger': formErrors.PatientAge}\">\n\n                            {{formErrors.PatientAge}}\n\n                        </span>\n                    </div>\n                </div>\n                <div class=\"col-md\">\n                    <div class=\"form-group mx-3 form-inline\">\n                        <legend class=\"col-form-label\">Sex</legend>\n                        <div class=\"form-check form-check-inline\">\n                            <input class=\"form-check-input\" formControlName=\"PatientGender\" type=\"radio\"\n                                name=\"PatientGender\" id=\"exampleRadios1\" value=\"Male\" checked>\n                            <label class=\"form-check-label\" for=\"exampleRadios1\">\n                                Male\n                            </label>\n                        </div>\n                        <div class=\"form-check form-check-inline\">\n                            <input class=\"form-check-input\" formControlName=\"PatientGender\" type=\"radio\"\n                                name=\"PatientGender\" id=\"exampleRadios2\" value=\"Female \">\n                            <label class=\"form-check-label\" for=\"exampleRadios2\">\n                                Female\n                            </label>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n\n\n\n            <div class=\"form-group mx-3\">\n                <div class=\"row\">\n                    <div class=\"col-md-8\">\n                        <label for=\"PatientAddress\">Address</label>\n                        <textarea formControlName=\"PatientAddress\" class=\"form-control\" id=\"PatientAddress\" rows=\"3\"\n                            [ngClass]=\"{'border-danger': formErrors.PatientAddress}\" (blur)=\"logValidationErrors()\"></textarea>\n                        <span *ngIf=\"formErrors.PatientAddress\" [ngClass]=\"{'text-danger': formErrors.PatientAddress}\">\n        \n                            {{formErrors.PatientAddress}}\n        \n                        </span>\n                    </div>\n                    <div class=\"col-md-4 mt-2\">\n                        <div class=\"form-group\">\n                            <label for=\"exampleFormControlFile1\">Patient Referred Prescription</label>\n                            <input type=\"file\"  formControlName=\"PatientReferredPrescription\" class=\"mt-2 form-control-file\"  (change)=\"onFileSelected($event)\" id=\"exampleFormControlFile1\">\n\n                            \n                          </div>\n                    </div>\n                </div>\n              \n               \n            </div>\n\n            <div formGroupName=\"PatientClinicSource\" class=\"form-inline\">\n                <label class=\"mx-3\">Clinic Source</label>\n                <div class=\"form-check form-check-inline ml-3\">\n                    <input class=\"form-check-input\" formControlName=\"Doctor\" type=\"checkbox\" id=\"advertisement\"\n                        value=\"option1\">\n                    <label class=\"form-check-label\" for=\"Doctor\">Doctor</label>\n                </div>\n                <div class=\"form-check form-check-inline ml-3\">\n                    <input class=\"form-check-input\" formControlName=\"Hospital\" type=\"checkbox\" id=\"Hospital\"\n                        value=\"option2\">\n                    <label class=\"form-check-label\" for=\"Hospital\">Hospital</label>\n                </div>\n\n                \n                <div class=\"form-check form-check-inline ml-3\">\n                    <input class=\"form-check-input\" formControlName=\"NursingHome\" type=\"checkbox\" id=\"others\" value=\"option3\"\n                        >\n                    <label class=\"form-check-label\" for=\"others\">Nursing Home</label>\n                </div>\n                <div class=\"form-check form-check-inline ml-3\">\n                    <input class=\"form-check-input\" formControlName=\"Polyclinic\" type=\"checkbox\" id=\"others\" value=\"option3\"\n                        >\n                    <label class=\"form-check-label\" for=\"Polyclinic\">Polyclinic</label>\n                </div>\n                <div class=\"form-check form-check-inline ml-3\">\n                    <input class=\"form-check-input\" formControlName=\"MedicineShop\" type=\"checkbox\" id=\"others\" value=\"option3\">\n                    <label class=\"form-check-label\" for=\"Medicine Shop\">Medicine Shop</label>\n                </div>\n                <div class=\"form-check form-check-inline ml-3\">\n                    <input class=\"form-check-input\" formControlName=\"RelativeFriend\" type=\"checkbox\" id=\"others\" value=\"option3\">\n                    <label class=\"form-check-label\" for=\"RelativeFriend\">Relative/Friend</label>\n                </div>\n                <div class=\"form-check form-check-inline ml-3\">\n                    <input class=\"form-check-input\" formControlName=\"ClinicSignBoard\" type=\"checkbox\" id=\"others\" value=\"option3\"\n                        >\n                    <label class=\"form-check-label\" for=\"Clinic SignBoard\">Clinic SignBoard</label>\n                </div>\n                <div class=\"form-check form-check-inline ml-3\">\n                    <input class=\"form-check-input\" formControlName=\"FlexBanner\" type=\"checkbox\" id=\"others\" value=\"option3\"\n                        >\n                    <label class=\"form-check-label\" for=\"Flex/Banner\">Flex/Banner</label>\n                </div>\n                <div class=\"form-check form-check-inline ml-3\">\n                    <input class=\"form-check-input\" formControlName=\"LeafletFlyers\" type=\"checkbox\" id=\"others\" value=\"option3\"\n                        >\n                    <label class=\"form-check-label\" for=\"Leaflet/Flyers\">Leaflet/Flyers</label>\n                </div>\n                <div class=\"form-check form-check-inline ml-3\">\n                    <input class=\"form-check-input\" formControlName=\"Newspaper\" type=\"checkbox\" id=\"others\" value=\"option3\"\n                        >\n                    <label class=\"form-check-label\" for=\"Newspaper\">Newspaper</label>\n                </div>\n                <div class=\"form-check form-check-inline ml-3\">\n                    <input class=\"form-check-input\" formControlName=\"ElectronicMedia\" type=\"checkbox\" id=\"others\" value=\"option3\"\n                        >\n                    <label class=\"form-check-label\" for=\"Electronic Media\">Electronic Media</label>\n                </div>\n                <div class=\"form-check form-check-inline ml-3\">\n                    <input class=\"form-check-input\" formControlName=\"Website\" type=\"checkbox\" id=\"others\" value=\"option3\"\n                        >\n                    <label class=\"form-check-label\" for=\"Website\">Website</label>\n                </div>\n                <div class=\"form-check form-check-inline ml-3\">\n                    <input class=\"form-check-input\" formControlName=\"Facebook\" type=\"checkbox\" id=\"others\" value=\"option3\"\n                       >\n                    <label class=\"form-check-label\" for=\"Facebook\">Facebook</label>\n                </div>\n                <div class=\"form-check form-check-inline ml-3\">\n                    <input class=\"form-check-input\" formControlName=\"SocialMedia\" type=\"checkbox\" id=\"others\" value=\"option3\"\n                       >\n                    <label class=\"form-check-label\" for=\"SocialMedia\">Social Media</label>\n                </div>\n                <div class=\"form-check form-check-inline ml-3\">\n                    <input class=\"form-check-input\" formControlName=\"Others\" (change)=\"showothersreasonbox\" type=\"checkbox\" id=\"others\" value=\"option3\"\n                       >\n                    <label class=\"form-check-label\" for=\"Others\">Others</label>\n                </div>\n                <div class=\"form-group ml-3 mb-2\" *ngIf=\"showothersreason\">\n                    <input class=\"form-control\" formControlName=\"othersreason\" type=\"text\" id=\"others\" value=\"option3\">\n\n                </div>\n\n            </div>\n\n\n        </div>\n\n\n        <br>\n        <br>\n\n        <div class=\"card mt-2\">\n            <div class=\"card-header\">\n                <h3 class=\"card-title\">Patient Appointment Details</h3>\n            </div>\n\n            <div class=\"row\">\n                <!-- <div class=\"col-md\">\n                    <div class=\"form-group mx-3 mt-2\">\n                        <label>Patient Appointment Date</label>\n                        <br>\n                        <mat-form-field>\n                            <mat-label>Choose a date</mat-label>\n                            <input matInput [matDatepicker]=\"picker\" formControlName=\"PatientAppointmentDate\">\n                            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                            <mat-datepicker #picker></mat-datepicker>\n                        </mat-form-field>\n                    </div>\n                </div> -->\n                <div class=\"col-md\">\n                    <div class=\"form-group mx-3 mt-2\">\n                        <label for=\"VisitingBranch\">Visiting Branch</label>\n                        <select [ngClass]=\"{'border-danger': formErrors.VisitingBranch}\" (blur)=\"logValidationErrors()\" formControlName=\"VisitingBranch\" class=\"form-control\" id=\"VisitingBranch\">\n                            <option value=\"\" disabled>Select</option>\n                            <option *ngFor=\"let branch of branches\" value={{branch.name}}>{{branch.name}}</option>\n                        </select>\n                        <span *ngIf=\"formErrors.VisitingBranch\" [ngClass]=\"{'text-danger': formErrors.VisitingBranch}\">\n\n                            {{formErrors.VisitingBranch}}\n        \n                        </span>\n                    </div>\n                    \n                </div>\n\n                <div class=\"col-md\">\n                    <div class=\"form-group mx-3 mt-2\">\n                        <label for=\"PatientReferredBy\">Patient Referred By</label>\n                        <select formControlName=\"PatientReferredBy\" [ngClass]=\"{'border-danger': formErrors.PatientReferredBy}\" (blur)=\"logValidationErrors()\" class=\"form-control\" id=\"PatientReferredBy\">\n                            <option value=\"\" disabled>Select</option>\n                            <option *ngFor=\"let patientreferrer of patientreferred\" value={{patientreferrer.name}}>\n                                {{patientreferrer.name}}</option>\n                        </select>\n                        <span *ngIf=\"formErrors.PatientReferredBy\" [ngClass]=\"{'text-danger': formErrors.PatientReferredBy}\">\n\n                            {{formErrors.PatientReferredBy}}\n        \n                        </span>\n                    </div>\n                </div>\n\n                <div class=\"col-md\">\n                    <div class=\"form-group mx-3 mt-2\">\n                        <label for=\"SelectDepartment\">Select Department</label>\n                        <select [ngClass]=\"{'border-danger': formErrors.SelectDepartment}\" (blur)=\"logValidationErrors()\" formControlName=\"SelectDepartment\" #dvalue (change)=\"changeddepartment(dvalue)\"\n                            class=\"form-control\" id=\"SelectDepartment\">\n                            <option value=\"\" disabled>Select</option>\n                            <option *ngFor=\"let department of departments\" value={{department.name}}>\n                                {{department.name}}</option>\n                        </select>\n\n                        <span *ngIf=\"formErrors.SelectDepartment\" [ngClass]=\"{'text-danger': formErrors.SelectDepartment}\">\n\n                    {{formErrors.SelectDepartment}}\n\n                </span>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <!-- <div class=\"col-md-4\">\n                    <div class=\"form-group mx-3\">\n                        <label for=\"SelectDepartment\">Select Department</label>\n                        <select formControlName=\"SelectDepartment\" #dvalue (change)=\"changeddepartment(dvalue)\" class=\"form-control\" id=\"SelectDepartment\">\n                            <option value=\"\" disabled>Select</option>\n                            <option *ngFor=\"let department of departments\" value={{department.name}}>\n                                {{department.name}}</option>\n                        </select>\n                    </div>\n                </div> -->\n                <div class=\"col-md-4\" *ngIf=\"showpurpose\">\n                    <div class=\"form-group mx-3\">\n                        <label for=\"PurposeofVisit\">Purpose of Visit</label>\n                        <select formControlName=\"PurposeofVisit\" #pvalue (change)=\"changedpurpose(pvalue.value)\"\n                            class=\"form-control\" id=\"PurposeofVisit\">\n                            <option value=\"\" disabled>Select</option>\n                            <option *ngFor=\"let purposes of purpose\" value={{purposes.name}}>\n                                {{purposes.name}}</option>\n                        </select>\n                    </div>\n                </div>\n                <div class=\"col-md-4\" *ngIf=\"showtreatmenttype\">\n                    <div class=\"form-group mx-3\">\n                        <label for=\"TreatmentType<\">Treatment Type</label>\n                        <select formControlName=\"TreatmentType\" multiple #dvalue (change)=\"treatmentype(dvalue.value)\"\n                            class=\"form-control\" id=\"TreatmentType\">\n                            <option value=\"\" disabled>Select</option>\n                            <option *ngFor=\"let treatments of treatment\" value={{treatments.field_treatment_name}}>\n                                {{treatments.field_treatment_name}}</option>\n                        </select>\n\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-md-10\">\n                <button type=\"submit\" [disabled]=\"patientForm.invalid\" class=\"btn btn-primary\">Submit</button>\n                <button type=\"button\" class=\"ml-2 btn btn-info\" (click)=\"loadvalues()\" data-toggle=\"modal\" data-target=\"#exampleModal\">Load Data</button>\n            </div>\n\n        </div>\n\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { PatientServicesService } from 'src/app/patient-services.service';\n\n@Component({\n  selector: 'app-patient-search',\n  templateUrl: './patient-search.component.html',\n  styleUrls: ['./patient-search.component.css']\n})\nexport class PatientSearchComponent implements OnInit {\n  registrationvalue: any;\n  checkuser: import(\"d:/patient/patient-services/src/app/patient\").IEmployee[];\n  disablestatus: boolean;\n  enablestatus: boolean;\n\n  constructor(private _patientService:PatientServicesService) { }\n\n  ngOnInit() {\n  }\n\n  patientValidate(regvalue) {\n    this.registrationvalue = regvalue;\n    this._patientService.validateuser(regvalue)\n      .subscribe(data => {\n        if(data){\n          this.checkuser = data;\n          console.log(this.checkuser);\n        }\n        \n        \n        if (Object.keys(this.checkuser).length == 1) {\n          this.disablestatus = true;\n          this.enablestatus = false;\n        }\n        else {\n          this.enablestatus = true;\n        }\n      });\n\n  }\n\n}\n","<div class=\"form-group\">\n    <div class=\"row\">\n        <div class=\"col-md-10\">\n            <label for=\"exampleInputEmail1\">Enter Patient ID</label>\n            <input type=\"text\" class=\"form-control\" #regvalue id=\"exampleInputEmail1\"\n                [disabled]=\"disablestatus\" aria-describedby=\"emailHelp\">\n\n        </div>\n        <div class=\"col-md-2 mt-4\"> <button type=\"button\" [disabled]=\"regvalue.value?false:true\"\n                class=\" mt-2 btn btn-primary\" (click)=\"patientValidate(regvalue.value)\">Validate</button></div>\n    </div>\n\n</div>","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\n\r\n@Directive({\r\n  selector: 'input[numbersOnly]'\r\n})\r\nexport class NumberDirective {\r\n\r\n  constructor(private _el: ElementRef) { }\r\n\r\n  @HostListener('input', ['$event']) onInputChange(event) {\r\n    const initalValue = this._el.nativeElement.value;\r\n    this._el.nativeElement.value = initalValue.replace(/[^0-9]*/g, '');\r\n    if ( initalValue !== this._el.nativeElement.value) {\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}